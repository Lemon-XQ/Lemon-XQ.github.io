<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lemon-XQ</title>
  <subtitle>Stay Hungry, Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lemonxq.cn/"/>
  <updated>2018-09-25T02:47:14.777Z</updated>
  <id>http://lemonxq.cn/</id>
  
  <author>
    <name>Lemon-XQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记 2018.9.8 PAT甲级+题解</title>
    <link href="http://lemonxq.cn/2018/09/25/%E8%AE%B0-2018-9-8-PAT%E7%94%B2%E7%BA%A7-%E9%A2%98%E8%A7%A3/"/>
    <id>http://lemonxq.cn/2018/09/25/记-2018-9-8-PAT甲级-题解/</id>
    <published>2018-09-25T02:27:09.000Z</published>
    <updated>2018-09-25T02:47:14.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　前两天考完就想写了，结果一直拖到现在orz……8月中旬的时候无意中看到PAT这个东东，因为刚好在准备保研，要复习机试的东西，就报了这个，虽然之前有接触过一点点ACM，不过个人对这种数据结构算法一直都不是特别擅长，准备了半个多月，每天都在刷题总结复习中度过，直到考完才感觉松了一口气，放一下分数和排名吧=w=（虽然感觉可以考的更好，不过也还算满意啦）</p>
<p><strong>分数：91/100</strong></p>
<p><strong>排名：78/2237</strong><br><a id="more"></a></p>
<h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>这次PAT考试有几个特点：</p>
<ol>
<li>放宽了时间限制，也就是说<strong>完全暴力</strong>也可以AC……</li>
<li>第一道题逻辑难，据说是顶级30分题？太打击了，反正我一开始就没思路（当时以为不能暴力…）</li>
<li><strong>STL、DFS</strong>太重要了……<br>　　考试一共是3个小时，考前几次模拟我都是第一道题15min左右，第二、三道30min左右，最后一道视情况（30min-1h），不过这次考试显然有点特殊，第一道狼人杀就把我打击到了，10几分钟都没有思路，只能先放着，跳到第二道，二、三都不是很难，1h左右跑通两道，提交的时候有一道错了一个3分的测试点，没管，直接看最后一道= =（考完发现那个错误其实很低级。。）<br>　　最后一道是LCA，考试前做了一道LCA的，是针对BST的，BST的LCA很容易找，但是考试要求求的是普通二叉树的LCA，一开始一直想的是各种先后序层序遍历序列找，试了快一个小时都没成功，最后换成DFS，10minAC……<br>　　做完三道只剩半个小时了，回去看那道狼人杀，试了10min连样例都跑不通QAQ内心一直想放弃，突然灵光一现（？）改了一种半暴力的方法，居然跑通样例了，这时只剩5min了，赶紧提交，居然只错了一个测试点，不过剩下的时间也不够了，就这样结束了我的第一次（也是最后一次）PAT考试@_@</li>
</ol>
<h2 id="一些建议"><a href="#一些建议" class="headerlink" title="一些建议"></a>一些建议</h2><ol>
<li>考纲里的每个点都要掌握！数据结构主要是<strong>队列、栈、链表、树、图，算法主要是最短路、DFS、BFS那些</strong></li>
<li>考前一个月每天都要保持题量和题感，最好是把题库里的都做一遍！</li>
<li>每次遇到不会的题不要一下子就去网上找题解，一般2h想不出的我才会去看看别人的思路，然后看看自己是哪里想错了，进行改进，不要直接copy代码！</li>
<li>确定考场后要第一时间确定考场<strong>提供的IDE</strong>是哪些，确保有自己熟悉的IDE，没有的话最好提前一个月更换IDE进行练习（比如我之前一直是用C-Free的，邮件问了考场老师才知道考场没有C-Free，只有Dev-C++…），不然就会像考场里很多同学一样，花了不少时间在熟悉IDE上……</li>
</ol>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>说了这么多，放一下本次考试题解吧（对应PAT题库1148-1151），均是可以AC的</p>
<ol>
<li><strong>第一题狼人杀</strong>，题意就是给出N个人的叙述，N个人中有两个狼人（1个撒谎1个不撒谎），而所有人中撒谎的只有两个，也就是说最终有一个撒谎的狼人和一个撒谎的村民，因此可以直接暴力枚举所有狼人组合，对每一个狼人组合，统计撒谎的狼人数和撒谎的村民数，如果都为1说明找到答案，如果枚举所有组合后都找不到答案，说明无解。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> N;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line">	<span class="keyword">int</span> arr[N+<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++) <span class="built_in">cin</span>&gt;&gt;arr[i];</span><br><span class="line">	<span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">int</span> a,b;</span><br><span class="line">	<span class="comment">// 列举每一种狼人组合</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=N;j++)&#123;</span><br><span class="line">			<span class="keyword">int</span> lie_wolf=<span class="number">0</span>,lie_human=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=N;k++)&#123;<span class="comment">// 判断该狼人组合下是否满足1个撒谎的狼人+1个撒谎的村民</span></span><br><span class="line">				<span class="keyword">if</span>(k==i || k==j)&#123;<span class="comment">// 狼人</span></span><br><span class="line">					<span class="keyword">if</span>(arr[k]&gt;<span class="number">0</span> &amp;&amp; arr[k]==i || arr[k]==j) lie_wolf++;</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(arr[k]&lt;<span class="number">0</span> &amp;&amp; <span class="built_in">abs</span>(arr[k])!=i &amp;&amp; <span class="built_in">abs</span>(arr[k])!=j) lie_wolf++;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;<span class="comment">// 村民</span></span><br><span class="line">					<span class="keyword">if</span>(arr[k]&gt;<span class="number">0</span> &amp;&amp; arr[k]==i || arr[k]==j) lie_human++;</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(arr[k]&lt;<span class="number">0</span> &amp;&amp; <span class="built_in">abs</span>(arr[k])!=i &amp;&amp; <span class="built_in">abs</span>(arr[k])!=j) lie_human++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(lie_wolf==<span class="number">1</span> &amp;&amp; lie_human==<span class="number">1</span>)&#123;</span><br><span class="line">				a=i;</span><br><span class="line">				b=j;</span><br><span class="line">				flag=<span class="literal">true</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(flag) <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">" "</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No Solution"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>2.<strong>第二题</strong>题意是给出一些危险物配对，比如A和B不能一起出现，B和C不能一起出现（但A和C可以一起出现，所以不是并查集问题），求所给序列中有没有危险物。思路也很简单，直接暴力遍历序列，找有没有危险匹配即可。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXV=<span class="number">100001</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; m[MAXV];<span class="comment">// 存储每个物品对应的危险物品列表</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> N,M;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;N&gt;&gt;M;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		m[a].push_back(b);</span><br><span class="line">		m[b].push_back(a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;M;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> K;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;K;</span><br><span class="line">		<span class="keyword">int</span> arr[K];</span><br><span class="line">		<span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;K;j++) <span class="built_in">cin</span>&gt;&gt;arr[j];</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;K<span class="number">-1</span>;j++)&#123;<span class="comment">// 从前到后暴力比较</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;K;k++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(find(m[arr[j]].begin(),m[arr[j]].end(),arr[k])!=m[arr[j]].end())&#123;</span><br><span class="line">					flag=<span class="literal">false</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!flag)<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag) <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.<strong>第三题是售货商问题。</strong>不过这道题不需要去求解，只需要判断所给序列是不是满足条件即可，思路也很简单，先判断路径是否连通，不连通就输出“Not a TS cycle”，连通的话再判断序列是否包含了全部结点且首尾结点相同，是则为TS cycle或TS simple cycle，二者可以通过序列长度进行判断。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3fffffff</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXV=<span class="number">201</span>;</span><br><span class="line"><span class="keyword">int</span> G[MAXV][MAXV];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> N,M,K;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;N&gt;&gt;M;</span><br><span class="line">	fill(G[<span class="number">0</span>],G[<span class="number">0</span>]+MAXV*MAXV,<span class="number">-1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;M;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> a,b,dis;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;dis;</span><br><span class="line">		G[a][b]=G[b][a]=dis;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;K;</span><br><span class="line">	<span class="keyword">int</span> ans_index,ans_len=INF;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> n;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">		<span class="keyword">int</span> path[n],len=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">		<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;path[j];</span><br><span class="line">			s.insert(path[j]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(G[path[j]][path[j+<span class="number">1</span>]]==<span class="number">-1</span>)&#123;</span><br><span class="line">				flag=<span class="literal">false</span>;<span class="comment">// 说明所给路径不连通</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;<span class="keyword">else</span> len+=G[path[j]][path[j+<span class="number">1</span>]];<span class="comment">// 路径总长度</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag)&#123;</span><br><span class="line">			<span class="keyword">if</span>(s.size()!=N || path[<span class="number">0</span>]!=path[n<span class="number">-1</span>])&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"Path %d: %d (Not a TS cycle)\n"</span>,i,len);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(len&lt;ans_len)&#123;<span class="comment">// TS cycle 记录最短路径长度及路径编号</span></span><br><span class="line">					ans_len=len;</span><br><span class="line">					ans_index=i;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(s.size()==n<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"Path %d: %d (TS simple cycle)\n"</span>,i,len);</span><br><span class="line">				<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Path %d: %d (TS cycle)\n"</span>,i,len);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Path %d: NA (Not a TS cycle)\n"</span>,i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Shortest Dist(%d) = %d"</span>,ans_index,ans_len);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>4.<strong>最后一题是LCA问题</strong>。要求找二叉树中任两个结点的最小公共祖先结点。我的思路是先建树，然后对两个结点进行dfs，求出根节点到这两个结点的路径，对两条路径从头到尾比较，出现的第一个不同的结点则退出循环，该结点的前一个结点就是它们的LCA（比如：3结点的路径是1-&gt;5-&gt;3，4结点的路径是1-&gt;5-&gt;4，则它们的LCA为5），如果没有出现不同的结点说明二者是包含关系，根据两条路径长度可以判断谁是祖先。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXV=<span class="number">10001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> node&#123;</span><br><span class="line">	node* lchild;</span><br><span class="line">	node* rchild;</span><br><span class="line">	<span class="keyword">int</span> data;</span><br><span class="line">	node()&#123;</span><br><span class="line">		lchild=rchild=<span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> in[MAXV],pre[MAXV];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line"><span class="function">node* <span class="title">create</span><span class="params">(<span class="keyword">int</span> preL,<span class="keyword">int</span> preR,<span class="keyword">int</span> inL,<span class="keyword">int</span> inR)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(preL&gt;preR) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	node* root=<span class="keyword">new</span> node;</span><br><span class="line">	root-&gt;data=pre[preL];</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=inL;i&lt;=inR;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(in[i]==pre[preL]) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> len=i-inL;</span><br><span class="line">	root-&gt;lchild=create(preL+<span class="number">1</span>,preL+len,inL,i<span class="number">-1</span>);</span><br><span class="line">	root-&gt;rchild=create(preL+len+<span class="number">1</span>,preR,i+<span class="number">1</span>,inR);</span><br><span class="line">	<span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; path,ans;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(node* root,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(root==<span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">if</span>(root-&gt;data==v)&#123;</span><br><span class="line">		flag=<span class="literal">true</span>;</span><br><span class="line">		path.push_back(root-&gt;data);</span><br><span class="line">		ans=path;</span><br><span class="line">		path.pop_back();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		path.push_back(root-&gt;data);</span><br><span class="line">		dfs(root-&gt;lchild,v);</span><br><span class="line">		<span class="keyword">if</span>(flag) <span class="keyword">return</span>;</span><br><span class="line">		path.pop_back();</span><br><span class="line">		path.push_back(root-&gt;data);</span><br><span class="line">		dfs(root-&gt;rchild,v);</span><br><span class="line">		<span class="keyword">if</span>(flag) <span class="keyword">return</span>;</span><br><span class="line">		path.pop_back();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> M,N;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;M&gt;&gt;N;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;in[i];</span><br><span class="line">		m[in[i]]=i;<span class="comment">// 记录某个结点是否出现过</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) <span class="built_in">cin</span>&gt;&gt;pre[i];</span><br><span class="line">	node* root=create(<span class="number">0</span>,N<span class="number">-1</span>,<span class="number">0</span>,N<span class="number">-1</span>);<span class="comment">// 根据先序中序序列建树</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;M;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> u,v;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line">		<span class="keyword">if</span>(m.count(u)==<span class="number">0</span> &amp;&amp; m.count(v)==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"ERROR: %d and %d are not found.\n"</span>,u,v);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(m.count(u)==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"ERROR: %d is not found.\n"</span>,u);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(m.count(v)==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"ERROR: %d is not found.\n"</span>,v);</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="comment">// dfs分别遍历u,v结点，得到两条路径</span></span><br><span class="line">			<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pu,pv;</span><br><span class="line">			path.clear();</span><br><span class="line">			flag=<span class="literal">false</span>;</span><br><span class="line">			dfs(root,u);</span><br><span class="line">			pu=ans;</span><br><span class="line">			path.clear();</span><br><span class="line">			flag=<span class="literal">false</span>;</span><br><span class="line">			dfs(root,v);</span><br><span class="line">			pv=ans;</span><br><span class="line">			<span class="comment">// 找两条路径第一个不同的结点</span></span><br><span class="line">			<span class="keyword">int</span> j;</span><br><span class="line">			<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;min(pu.size(),pv.size());j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(pu[j]!=pv[j]) <span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(j!=min(pu.size(),pv.size())) <span class="built_in">printf</span>(<span class="string">"LCA of %d and %d is %d.\n"</span>,u,v,pu[j<span class="number">-1</span>]);</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(pu.size()&lt;pv.size()) <span class="built_in">printf</span>(<span class="string">"%d is an ancestor of %d.\n"</span>,u,v);</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d is an ancestor of %d.\n"</span>,v,u);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　前两天考完就想写了，结果一直拖到现在orz……8月中旬的时候无意中看到PAT这个东东，因为刚好在准备保研，要复习机试的东西，就报了这个，虽然之前有接触过一点点ACM，不过个人对这种数据结构算法一直都不是特别擅长，准备了半个多月，每天都在刷题总结复习中度过，直到考完才感觉松了一口气，放一下分数和排名吧=w=（虽然感觉可以考的更好，不过也还算满意啦）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分数：91/100&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;排名：78/2237&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT" scheme="http://lemonxq.cn/categories/PAT/"/>
    
    
      <category term="PAT Advanced" scheme="http://lemonxq.cn/tags/PAT-Advanced/"/>
    
      <category term="ACM" scheme="http://lemonxq.cn/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>图像边缘检测及提取方法总结（含Matlab代码）</title>
    <link href="http://lemonxq.cn/2018/03/24/%E5%9B%BE%E5%83%8F%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B%E5%8F%8A%E6%8F%90%E5%8F%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%EF%BC%88%E5%90%ABMatlab%E4%BB%A3%E7%A0%81%EF%BC%89/"/>
    <id>http://lemonxq.cn/2018/03/24/图像边缘检测及提取方法总结（含Matlab代码）/</id>
    <published>2018-03-24T12:40:21.000Z</published>
    <updated>2018-09-25T02:04:21.720Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　呼~最近开始入坑图像+机器学习了，学习的过程中遇到了不少不懂的东西，好在自学能力还可以（自恋中= =），所以断断续续也算学会了一些东西~因为这段时间一直在做边缘检测和提取的工作，所以本篇就总结一下一些常见的边缘检测方法，篇幅较长，可按点查看~<br><a id="more"></a></p>
<h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>　　图像处理中经常用到一些名词，以下列举一些：</p>
<h3 id="1-滤波"><a href="#1-滤波" class="headerlink" title="1. 滤波"></a>1. 滤波</h3><p>　　所谓滤波就是对每个像素点及其邻域点的灰度值按照一定的参数规则进行加权平均，这样可以有效滤去理想图像中叠加的高频噪声。常用的滤波有线性滤波、中值滤波、均值滤波、双边滤波、高斯滤波等。滤波有抑制噪声的作用，但这会使得图像边缘模糊。</p>
<h3 id="2-直方图"><a href="#2-直方图" class="headerlink" title="2. 直方图"></a>2. 直方图</h3><p>　　在图像处理中，经常用到直方图，如颜色直方图、灰度直方图等。直方图可以直观展现数据分布情况，如灰度直方图中，横坐标为各个灰度范围，纵坐标为处在相应范围的像素数。图像直方图不关心像素所处的空间位置，因此不受图像旋转和平移变化的影响，可以作为图像的特征。</p>
<h3 id="3-上采样"><a href="#3-上采样" class="headerlink" title="3. 上采样"></a>3. 上采样</h3><p> 　　上采样即放大图像（或称图像插值（interpolating））,从而使图像可以显示在更高分辨率的显示设备上。注意对图像的缩放操作通常会影响图像的质量。上采样几乎都是采用<strong>内插值</strong>方法，即在原有图像像素的基础上在像素点之间采用合适的插值算法插入新的元素。    </p>
<h3 id="4-下采样"><a href="#4-下采样" class="headerlink" title="4. 下采样"></a>4. 下采样</h3><p>　　下采样即缩小图像（或称为降采样（downsampled）），其主要目的有两个：1、使得图像符合显示区域的大小；2、生成对应图像的缩略图。</p>
<p>　　<strong>下采样原理</strong>：对于一幅图像I尺寸为M*N，对其进行s倍下采样，即得到(M/s)*(N/s)尺寸的分辨率图像，当然s应该是M和N的公约数才行，如果考虑的是矩阵形式的图像，就是把原始图像s*s窗口内的图像变成一个像素，这个像素点的值就是窗口内所有像素的均值</p>
<h2 id="Canny算子"><a href="#Canny算子" class="headerlink" title="Canny算子"></a>Canny算子</h2><h3 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a>1.原理</h3><p>　　canny算子与LoG算子类似，属于先平滑后求导数的方法，原理可分成下面4个部分：</p>
<h4 id="1-1-高斯滤波"><a href="#1-1-高斯滤波" class="headerlink" title="1.1 高斯滤波"></a>1.1 高斯滤波</h4><p>　　在所有滤波方法中，需要考虑的最重要的一点是如何平衡去噪与边缘检测精确之间的矛盾。实际工程经验表明，高斯函数确定的核可以提供较好的折衷方案。</p>
<p>　　高斯滤波实现方法有两种：<strong>离散化窗口滑动卷积、傅里叶变换</strong>。因前者比较常用，故下面只介绍前者。</p>
<p>　　离散化窗口滑动卷积主要利用高斯核实现，即一个奇数大小的高斯模板。常用的高斯核模板有3*3 和 5*5两种<br>　　<br><img src="http://img.blog.csdn.net/20170104082145549" alt=""></p>
<p>其中的参数通过高斯函数计算，x^2+y^2表示像素点和中心像素点的距离，sigma表示标准差。</p>
<p><img src="http://img.blog.csdn.net/20170104083209100" alt=""></p>
<ul>
<li><strong>注：</strong><ul>
<li>sigma如果选的过大，会加深滤波程度，从而导致图像边缘模糊，不利于下一步的边缘检测，如果过小，则滤波效果不佳</li>
<li>计算高斯模板参数时，需要归一化处理，对于归一化的原因，有一种解释是：归一化之后，通过卷积计算出来的模板中心像素被限制到了0-255的灰度区间中。假若某一邻域内所有像素的灰度值为255，利用该模板进行卷积之后，求得的模板中心像素灰度值仍然为255；假若计算出来的高斯模板参数之和小于1，那么通过该模板进行卷积之后，模板中心像素的灰度值将小于255，偏离了实际的灰度值，产生了误差。</li>
</ul>
</li>
</ul>
<h4 id="1-2-求梯度幅值和梯度方向"><a href="#1-2-求梯度幅值和梯度方向" class="headerlink" title="1.2 求梯度幅值和梯度方向"></a>1.2 求梯度幅值和梯度方向</h4><p>　　canny算子使用的卷积算子如下：</p>
<p><img src="http://hi.csdn.net/attachment/201110/20/0_13191191580BUw.gif" alt=""></p>
<p>　　梯度幅值及梯度方向的计算如下，其中P表示x方向一阶偏导数矩阵，Q表示y方向一阶偏导数矩阵，M表示梯度幅值，θ表示梯度方向</p>
<p><img src="http://hi.csdn.net/attachment/201110/20/0_131911920906FX.gif" alt=""></p>
<h4 id="1-3-非极大值抑制"><a href="#1-3-非极大值抑制" class="headerlink" title="1.3 非极大值抑制"></a>1.3 非极大值抑制</h4><p>　　在上面求出的梯度幅值矩阵中，值越大的元素代表其梯度越大，但它不一定是边缘像素，因此需要进行非极大值抑制，也就是寻找像素点局部最大值，将非极大值点所对应的灰度值置为0，这样可以剔除掉一大部分非边缘的点。<br>　　<img src="http://hi.csdn.net/attachment/201110/20/0_1319119291xBLz.gif" alt=""></p>
<p>　　如上图，判定C点是否为8邻域内最大梯度值点，只需要判断C是否比C的梯度方向上dTmp1和dTmp2点大，是则保留，不是则将C点灰度值置0。而dTmp1和dTmp2的梯度值可以通过插值得到。</p>
<h4 id="1-4-双阈值法闭合边缘"><a href="#1-4-双阈值法闭合边缘" class="headerlink" title="1.4 双阈值法闭合边缘"></a>1.4 双阈值法闭合边缘</h4><p>　　上面得到的边缘有些为假边缘，且有边缘断裂的问题，如果根据高阈值得到一个边缘图像，这样一个图像含有很少的假边缘，但是由于阈值较高，产生的图像边缘可能不闭合，因此还要采用一个低阈值，当到达轮廓的端点时，在断点的8邻域点中寻找满足低阈值的点，再根据此点收集新的边缘，直到整个图像边缘闭合。</p>
<h3 id="2-实现"><a href="#2-实现" class="headerlink" title="2.实现"></a>2.实现</h3><h4 id="2-1-原始图像灰度化"><a href="#2-1-原始图像灰度化" class="headerlink" title="2.1 原始图像灰度化"></a>2.1 原始图像灰度化</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img = imread(<span class="string">'lena.jpg'</span>);</span><br><span class="line">img = rgb2gray(img);</span><br></pre></td></tr></table></figure>
<h4 id="2-2-调用matlab内置函数"><a href="#2-2-调用matlab内置函数" class="headerlink" title="2.2 调用matlab内置函数"></a>2.2 调用matlab内置函数</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img_edge = edge(img,<span class="string">'canny'</span>);</span><br><span class="line">figure;imshow(img_edge);title(<span class="string">'canny'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Roberts、Sobel、Prewitt算子"><a href="#Roberts、Sobel、Prewitt算子" class="headerlink" title="Roberts、Sobel、Prewitt算子"></a>Roberts、Sobel、Prewitt算子</h2><p>图像的灰度值梯度可以用一阶偏导的有限差分近似计算，常用梯度算子有：</p>
<h3 id="Roberts算子"><a href="#Roberts算子" class="headerlink" title="Roberts算子"></a>Roberts算子</h3><p><img src="http://hi.csdn.net/attachment/201110/20/0_1319118788tu9f.gif" alt=""></p>
<p>梯度幅值为：<br><img src="http://hi.csdn.net/attachment/201110/20/0_1319118857NQ6k.gif" alt=""></p>
<p><strong>matlab中可直接调用</strong>：<code>edge(img,&#39;roberts&#39;)</code></p>
<h3 id="Sobel算子"><a href="#Sobel算子" class="headerlink" title="Sobel算子"></a>Sobel算子</h3><p><img src="http://hi.csdn.net/attachment/201110/20/0_1319118933e59W.gif" alt=""></p>
<p>梯度幅值为：<br><img src="http://hi.csdn.net/attachment/201110/20/0_1319119015UX8D.gif" alt=""></p>
<p><strong>matlab中可直接调用</strong>：<code>edge(img,&#39;sobel&#39;)</code></p>
<h3 id="Prewitt算子"><a href="#Prewitt算子" class="headerlink" title="Prewitt算子"></a>Prewitt算子</h3><p><img src="http://hi.csdn.net/attachment/201110/20/0_1319119083ivVZ.gif" alt=""></p>
<p><strong>matlab中可直接调用</strong>：<code>edge(img,&#39;prewitt&#39;)</code></p>
<h2 id="双边滤波（Bilateral-Filters）"><a href="#双边滤波（Bilateral-Filters）" class="headerlink" title="双边滤波（Bilateral Filters）"></a>双边滤波（Bilateral Filters）</h2><h3 id="1-原理-1"><a href="#1-原理-1" class="headerlink" title="1. 原理"></a>1. 原理</h3><p>　　传统滤波方法多多少少会有模糊边缘的缺点，而双边滤波作为一种非线性滤波器，具有在降噪平滑的同时，保持边缘的效果。该特性主要是通过在卷积的过程中组合空域(space)函数和值域(range)核函数来实现的，空域指的是像素的欧氏距离，值域指的是像素范围域中的辐射差异（如卷积核中像素与中心像素之间相似程度、颜色强度，深度距离等）。典型的核函数为高斯分布函数，如下所示：<br><img src="http://my.csdn.net/uploads/201205/30/1338365238_1668.jpg" alt=""></p>
<p>其中，权重系数w(i,j,k,l)取决于空域核和值域核的乘积：<br><img src="http://my.csdn.net/uploads/201205/30/1338365512_2777.jpg" alt=""></p>
<p>在图像的平坦区域，像素值变化很小，对应的像素值域权重接近于1，此时空域权重起主要作用，相当于进行高斯模糊；在图像的边缘区域，像素值变化很大，像素值域权重变大，从而保持了边缘的信息。</p>
<h3 id="2-实现-1"><a href="#2-实现-1" class="headerlink" title="2. 实现"></a>2. 实现</h3><p>　　上述方法的时间复杂度是O(σd^2)，非常耗时。论文《Fast O(1) bilateral ﬁltering using trigonometric range kernels》，提出了用Raised cosines函数来逼近高斯值域函数，并利用一些特性把值域函数分解为一些列函数的叠加，从而实现函数的加速，而论文” A fast approximation of the bilateral filter using a signal processing approach”则提出了一种使用信号处理的方法，主要是在原有域上添加了信号强度这一维，构成了高维空间，在高维空间中进行下采样，下面的代码是作者团队编写的：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 双边滤波函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span> = <span class="title">fBilateralFilter_ReviseVer</span><span class="params">( data, edge, edgeMin, edgeMax, sigmaSpatial, sigmaRange,samplingSpatial, samplingRange )</span></span></span><br><span class="line"><span class="keyword">if</span> ~exist( <span class="string">'edge'</span>, <span class="string">'var'</span> )</span><br><span class="line">	edge = data;</span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">isempty</span>( edge )</span><br><span class="line">	edge = data;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">inputHeight = <span class="built_in">size</span>( data, <span class="number">1</span> );</span><br><span class="line">inputWidth = <span class="built_in">size</span>( data, <span class="number">2</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ~exist( <span class="string">'edgeMin'</span>, <span class="string">'var'</span> )</span><br><span class="line">	edgeMin = min( edge( : ) );</span><br><span class="line"><span class="comment">% 	warning( 'edgeMin not set!  Defaulting to: %f\n', edgeMin );</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ~exist( <span class="string">'edgeMax'</span>, <span class="string">'var'</span> )</span><br><span class="line">	edgeMax = max( edge( : ) );</span><br><span class="line"><span class="comment">% 	warning( 'edgeMax not set!  Defaulting to: %f\n', edgeMax );</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">edgeDelta = edgeMax - edgeMin;<span class="comment">% hl- span of range</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% hl- assign scale parameters in both spatial and range domain</span></span><br><span class="line"><span class="keyword">if</span> ~exist( <span class="string">'sigmaSpatial'</span>, <span class="string">'var'</span> )</span><br><span class="line">	sigmaSpatial = min( inputWidth, inputHeight ) / <span class="number">16</span>;</span><br><span class="line">	fprintf( <span class="string">'Using default sigmaSpatial of: %f\n'</span>, sigmaSpatial );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> ~exist( <span class="string">'sigmaRange'</span>, <span class="string">'var'</span> )</span><br><span class="line">	sigmaRange = <span class="number">0.1</span> * edgeDelta;</span><br><span class="line">	fprintf( <span class="string">'Using default sigmaRange of: %f\n'</span>, sigmaRange );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ~exist( <span class="string">'samplingSpatial'</span>, <span class="string">'var'</span> )</span><br><span class="line">	samplingSpatial = sigmaSpatial;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ~exist( <span class="string">'samplingRange'</span>, <span class="string">'var'</span> )</span><br><span class="line">	samplingRange = sigmaRange;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">size</span>( data ) ~= <span class="built_in">size</span>( edge )</span><br><span class="line">	error( <span class="string">'data and edge must be of the same size'</span> );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% parameters</span></span><br><span class="line">derivedSigmaSpatial = sigmaSpatial / samplingSpatial; </span><br><span class="line">derivedSigmaRange = sigmaRange / samplingRange;</span><br><span class="line">paddingXY = <span class="built_in">floor</span>( <span class="number">2</span> * derivedSigmaSpatial ) + <span class="number">1</span>;</span><br><span class="line">paddingZ = <span class="built_in">floor</span>( <span class="number">2</span> * derivedSigmaRange ) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% allocate 3D grid</span></span><br><span class="line">downsampledWidth = <span class="built_in">floor</span>( ( inputWidth - <span class="number">1</span> ) / samplingSpatial ) + <span class="number">1</span> + <span class="number">2</span> * paddingXY; <span class="comment">% paddingXY - 控制延拓范围</span></span><br><span class="line">downsampledHeight = <span class="built_in">floor</span>( ( inputHeight - <span class="number">1</span> ) / samplingSpatial ) + <span class="number">1</span> + <span class="number">2</span> * paddingXY;</span><br><span class="line">downsampledDepth = <span class="built_in">floor</span>( edgeDelta / samplingRange ) + <span class="number">1</span> + <span class="number">2</span> * paddingZ;</span><br><span class="line"></span><br><span class="line">gridData = <span class="built_in">zeros</span>( downsampledHeight, downsampledWidth, downsampledDepth );</span><br><span class="line">gridWeights = <span class="built_in">zeros</span>( downsampledHeight, downsampledWidth, downsampledDepth );</span><br><span class="line"></span><br><span class="line"><span class="comment">% compute downsampled indices</span></span><br><span class="line">[ jj, ii ] = <span class="built_in">meshgrid</span>( <span class="number">0</span> : inputWidth - <span class="number">1</span>, <span class="number">0</span> : inputHeight - <span class="number">1</span> ); <span class="comment">% hl- create the coordinats of xy-plane; jj - y coordinates of all pixels, ii - x coordinates of all pixels</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%Compute the downsampled coordinates</span></span><br><span class="line">di = <span class="built_in">round</span>( ii / samplingSpatial ) + paddingXY + <span class="number">1</span>; <span class="comment">% round: Round to nearest integer四舍五入</span></span><br><span class="line">dj = <span class="built_in">round</span>( jj / samplingSpatial ) + paddingXY + <span class="number">1</span>;</span><br><span class="line">dz = <span class="built_in">round</span>( ( edge - edgeMin ) / samplingRange ) + paddingZ + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% hl - average sampling (box sampling)</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span> : <span class="built_in">numel</span>( dz ) <span class="comment">% numel: Number of elements in an array</span></span><br><span class="line">	dataZ = data( k ); <span class="comment">% traverses the image column wise, same as di( k )</span></span><br><span class="line">	<span class="keyword">if</span> ~<span class="built_in">isnan</span>(dataZ),</span><br><span class="line">        dik = di( k ); <span class="comment">%取出坐标</span></span><br><span class="line">        djk = dj( k );</span><br><span class="line">        dzk = dz( k );</span><br><span class="line">        gridData( dik, djk, dzk ) = gridData( dik, djk, dzk ) + dataZ;</span><br><span class="line">        gridWeights( dik, djk, dzk ) = gridWeights( dik, djk, dzk ) + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% make gaussian kernel</span></span><br><span class="line">kernelWidth = <span class="number">2</span> * derivedSigmaSpatial + <span class="number">1</span>;</span><br><span class="line">kernelHeight = kernelWidth;</span><br><span class="line">kernelDepth = <span class="number">2</span> * derivedSigmaRange + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">halfKernelWidth = <span class="built_in">floor</span>( kernelWidth / <span class="number">2</span> );</span><br><span class="line">halfKernelHeight = <span class="built_in">floor</span>( kernelHeight / <span class="number">2</span> );</span><br><span class="line">halfKernelDepth = <span class="built_in">floor</span>( kernelDepth / <span class="number">2</span> );</span><br><span class="line"></span><br><span class="line">[gridX, gridY, gridZ] = <span class="built_in">meshgrid</span>( <span class="number">0</span> : kernelWidth - <span class="number">1</span>, <span class="number">0</span> : kernelHeight - <span class="number">1</span>, <span class="number">0</span> : kernelDepth - <span class="number">1</span> );</span><br><span class="line">gridX = gridX - halfKernelWidth;</span><br><span class="line">gridY = gridY - halfKernelHeight;</span><br><span class="line">gridZ = gridZ - halfKernelDepth;</span><br><span class="line">gridRSquared = ( gridX .* gridX + gridY .* gridY ) / ( derivedSigmaSpatial * derivedSigmaSpatial ) + ( gridZ .* gridZ ) / ( derivedSigmaRange * derivedSigmaRange );</span><br><span class="line">kernel = <span class="built_in">exp</span>( <span class="number">-0.5</span> * gridRSquared );</span><br><span class="line"></span><br><span class="line"><span class="comment">% convolve</span></span><br><span class="line">blurredGridData = convn( gridData, kernel, <span class="string">'same'</span> );</span><br><span class="line">blurredGridWeights = convn( gridWeights, kernel, <span class="string">'same'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">% divide</span></span><br><span class="line">blurredGridWeights( blurredGridWeights == <span class="number">0</span> ) = <span class="number">-2</span>; <span class="comment">% avoid divide by 0, won't read there anyway  </span></span><br><span class="line">normalizedBlurredGrid = blurredGridData ./ blurredGridWeights;</span><br><span class="line">normalizedBlurredGrid( blurredGridWeights &lt; <span class="number">-1</span> ) = <span class="number">0</span>; <span class="comment">% put 0s where it's undefined</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% upsample</span></span><br><span class="line">[ jj, ii ] = <span class="built_in">meshgrid</span>( <span class="number">0</span> : inputWidth - <span class="number">1</span>, <span class="number">0</span> : inputHeight - <span class="number">1</span> ); <span class="comment">% meshgrid does x, then y, so output arguments need to be reversed</span></span><br><span class="line"><span class="comment">% no rounding</span></span><br><span class="line">di = ( ii / samplingSpatial ) + paddingXY + <span class="number">1</span>;</span><br><span class="line">dj = ( jj / samplingSpatial ) + paddingXY + <span class="number">1</span>;</span><br><span class="line">dz = ( edge - edgeMin ) / samplingRange + paddingZ + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">output = interpn( normalizedBlurredGrid, di, dj, dz ); <span class="comment">% N-D data interpolation</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Hessian特征"><a href="#Hessian特征" class="headerlink" title="Hessian特征"></a>Hessian特征</h2><h3 id="1-原理-2"><a href="#1-原理-2" class="headerlink" title="1. 原理"></a>1. 原理</h3><p>　　Hessian矩阵本质是是一个多元函数的二阶偏导数矩阵，描述了函数的局部曲率。关于Hessian矩阵的由来及详细推导证明见参考资料3，这里直接介绍如何得到Hessian矩阵：</p>
<ul>
<li>高斯函数</li>
</ul>
<p><img src="https://images0.cnblogs.com/blog/340413/201304/11220012-dfd2500ffeab46deb94c565cbd543cd7.png" alt=""></p>
<ul>
<li>求二阶偏导</li>
</ul>
<p><img src="https://images0.cnblogs.com/blog/340413/201304/11220100-aacb4d9efd5847aea09c0010d246aaa9.png" alt=""></p>
<ul>
<li>对原图进行卷积</li>
</ul>
<p><img src="https://images0.cnblogs.com/blog/340413/201304/11215427-715349a8c1aa4a138daa0a8333ae86a8.png" alt=""></p>
<ul>
<li>构成Hessian矩阵</li>
</ul>
<p><img src="https://images0.cnblogs.com/blog/340413/201304/11215631-d4862108572245a783a3225e84036ad0.png" alt=""></p>
<h3 id="2-实现-2"><a href="#2-实现-2" class="headerlink" title="2. 实现"></a>2. 实现</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 提取Hessian特征值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[hessianValue,Ixx,Ixy,Iyy]</span> = <span class="title">edge_hessian</span><span class="params">(img)</span></span></span><br><span class="line">    [m n]=<span class="built_in">size</span>(img);</span><br><span class="line">    w=<span class="number">4</span>;</span><br><span class="line">    sigma=<span class="number">1.2</span>;</span><br><span class="line">    [x y]=<span class="built_in">meshgrid</span>(-w:w,-w:w);</span><br><span class="line">    <span class="comment">% 高斯函数对应的二阶偏导  </span></span><br><span class="line">    Dxx = <span class="number">1</span>/(<span class="number">-2</span>*<span class="built_in">pi</span>*sigma^<span class="number">4</span>)*(<span class="number">1</span>-x.^<span class="number">2</span>/sigma^<span class="number">2</span>)*<span class="built_in">exp</span>(-(x.^<span class="number">2</span>+x.^<span class="number">2</span>)/(<span class="number">2</span>*sigma^<span class="number">2</span>)); </span><br><span class="line">    Dyy = <span class="number">1</span>/(<span class="number">-2</span>*<span class="built_in">pi</span>*sigma^<span class="number">4</span>)*(<span class="number">1</span>-y.^<span class="number">2</span>/sigma^<span class="number">2</span>)*<span class="built_in">exp</span>(-(x.^<span class="number">2</span>+y.^<span class="number">2</span>)/(<span class="number">2</span>*sigma^<span class="number">2</span>));</span><br><span class="line">    Dxy = <span class="number">1</span>/(<span class="number">2</span>*<span class="built_in">pi</span>*sigma^<span class="number">6</span>)*(x.*y)*<span class="built_in">exp</span>(-(x.^<span class="number">2</span>+y.^<span class="number">2</span>)/(<span class="number">2</span>*sigma^<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    Ixx=imfilter(img,Dxx,<span class="string">'replicate'</span>);</span><br><span class="line">    Iyy=imfilter(img,Dyy,<span class="string">'replicate'</span>);</span><br><span class="line">    Ixy=imfilter(img,Dxy,<span class="string">'replicate'</span>);</span><br><span class="line"></span><br><span class="line">    hessianValue=[];</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">       <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n </span><br><span class="line">        hessianValue(<span class="built_in">i</span>,<span class="built_in">j</span>) = Ixx(<span class="built_in">i</span>,<span class="built_in">j</span>)*Iyy(<span class="built_in">i</span>,<span class="built_in">j</span>) - Ixy(<span class="built_in">i</span>,<span class="built_in">j</span>)*Ixy(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="Haar特征"><a href="#Haar特征" class="headerlink" title="Haar特征"></a>Haar特征</h2><h3 id="1-原理-3"><a href="#1-原理-3" class="headerlink" title="1. 原理"></a>1. 原理</h3><p>　　Haar特征是一种反映图像的灰度变化的，像素分模块求差值的一种特征。常用于人脸识别中五官划分，例如：脸部的一些特征能由矩形模块差值特征简单的描述，如：眼睛要比脸颊颜色要深，鼻梁两侧比鼻梁颜色要深，嘴巴比周围颜色要深等。但矩形特征只对一些简单的图形结构，如边缘、线段较敏感，所以只能描述在特定方向（水平、垂直、对角）上有明显像素模块梯度变化的图像结构。</p>
<p>　　它分为三类：<strong>边缘特征、线性特征、中心特征和对角线特征</strong>。<br><img src="http://img.blog.csdn.net/20160816201200204" alt=""></p>
<p>　　<strong>模板特征值计算</strong>： 黑色矩形像素和 - 白色矩形像素和</p>
<ul>
<li><strong>注</strong>：一般通过<strong>积分图</strong>计算Haar特征，这样只需求一次积分图，就可以求出多种Haar特征，节省计算时间</li>
<li><strong>积分图</strong>：主要思想是将图像从起点开始到各个点所形成的矩形区域像素之和作为一个数组的元素保存在内存中，当要计算某个区域的像素和时可以直接索引数组的元素，不用重新计算这个区域的像素和。示例如下：<br><img src="http://my.csdn.net/uploads/201206/04/1338798979_5003.JPG" alt=""></li>
</ul>
<p>上图中，D块的像素和=II(4)+II(1)-II(2)-II(3) II表示积分图</p>
<h3 id="2-实现-3"><a href="#2-实现-3" class="headerlink" title="2. 实现"></a>2. 实现</h3><p>这里我只实现了Haar特征的一种，其他的同理<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 提取Haar特征（中心为黑四周为白），思路如下：</span></span><br><span class="line"><span class="comment">% white+black = II(i+1,j+1)+II(i-2,j-1)-II(i-2,j+1)-II(i+1,j-2)</span></span><br><span class="line"><span class="comment">% black = img(i,j)</span></span><br><span class="line"><span class="comment">% harr = white-black = white+black-2*black</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[haar,hg,hgx,hgy]</span> = <span class="title">edge_haar_center</span><span class="params">(img)</span></span></span><br><span class="line">    close all;</span><br><span class="line">    II = integralImage(img);<span class="comment">% 求积分图</span></span><br><span class="line">    II = II(<span class="number">2</span>:<span class="keyword">end</span>,<span class="number">2</span>:<span class="keyword">end</span>);</span><br><span class="line">    height = <span class="built_in">size</span>(II,<span class="number">1</span>);</span><br><span class="line">    width = <span class="built_in">size</span>(II,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    total = II(<span class="number">4</span>:height<span class="number">-1</span>,<span class="number">4</span>:width<span class="number">-1</span>)+II(<span class="number">1</span>:height<span class="number">-4</span>,<span class="number">1</span>:width<span class="number">-4</span>)-II(<span class="number">1</span>:height<span class="number">-4</span>,<span class="number">4</span>:width<span class="number">-1</span>)-II(<span class="number">4</span>:height<span class="number">-1</span>,<span class="number">1</span>:width<span class="number">-4</span>);</span><br><span class="line">    black = img(<span class="number">3</span>:height<span class="number">-2</span>,<span class="number">3</span>:width<span class="number">-2</span>);</span><br><span class="line">    haar = (total - <span class="number">2</span>*black);</span><br><span class="line">    [hgx,hgy] = gradient(haar);</span><br><span class="line">    hg = <span class="built_in">sqrt</span>(hgx.^<span class="number">2</span>+hgy.^<span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://blog.csdn.net/likezhaobin/article/details/6892176" target="_blank" rel="noopener">Canny边缘检测算法原理及其VC实现详解</a></li>
<li><a href="https://blog.csdn.net/piaoxuezhong/article/details/78302920" target="_blank" rel="noopener">Bilateral Filters（双边滤波算法）原理及实现</a></li>
<li><a href="https://blog.csdn.net/lwzkiller/article/details/55050275" target="_blank" rel="noopener">Hessian矩阵以及在图像中的应用</a></li>
<li><a href="https://blog.csdn.net/lanxuecc/article/details/52222369" target="_blank" rel="noopener">机器学习之Haar特征</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　呼~最近开始入坑图像+机器学习了，学习的过程中遇到了不少不懂的东西，好在自学能力还可以（自恋中= =），所以断断续续也算学会了一些东西~因为这段时间一直在做边缘检测和提取的工作，所以本篇就总结一下一些常见的边缘检测方法，篇幅较长，可按点查看~&lt;br&gt;
    
    </summary>
    
      <category term="图像处理" scheme="http://lemonxq.cn/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="Matlab" scheme="http://lemonxq.cn/tags/Matlab/"/>
    
      <category term="机器学习" scheme="http://lemonxq.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Android项目开发笔记之身高年龄体重WheelView实现（单栏/双栏）</title>
    <link href="http://lemonxq.cn/2018/03/11/Android%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%BA%AB%E9%AB%98%E5%B9%B4%E9%BE%84%E4%BD%93%E9%87%8DWheelView%E5%AE%9E%E7%8E%B0%EF%BC%88%E5%8D%95%E6%A0%8For%E5%8F%8C%E6%A0%8F%EF%BC%89/"/>
    <id>http://lemonxq.cn/2018/03/11/Android项目开发笔记之身高年龄体重WheelView实现（单栏or双栏）/</id>
    <published>2018-03-10T16:28:39.000Z</published>
    <updated>2018-09-25T02:04:21.716Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　本系列第三篇。本篇讲的是很常见的身高年龄选择器，可以定制成单栏或者双栏显示模式~<br><a id="more"></a></p>
<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><h3 id="单栏"><a href="#单栏" class="headerlink" title="单栏"></a>单栏</h3><p><img src="http://okwl1c157.bkt.clouddn.com/Android-wheelview1.png" alt=""></p>
<h3 id="双栏"><a href="#双栏" class="headerlink" title="双栏"></a>双栏</h3><p><img src="http://okwl1c157.bkt.clouddn.com/android-wheelview2.png" alt=""></p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="自定义布局类"><a href="#自定义布局类" class="headerlink" title="自定义布局类"></a>自定义布局类</h3><ol>
<li>新建WheelView类，继承ScrollView</li>
<li>该类的代码我放在<a href="https://gist.github.com/Lemon-XQ/f20325c84a58f3c8e66a4efb56e1ab72" target="_blank" rel="noopener">gist</a>上了，主要是参考了一份别人的代码，加上一点改动。</li>
</ol>
<h3 id="初始化数据源"><a href="#初始化数据源" class="headerlink" title="初始化数据源"></a>初始化数据源</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// 存储选项列表</span></span><br><span class="line">   <span class="keyword">private</span> ArrayList&lt;String&gt; heightList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">   <span class="keyword">private</span> ArrayList&lt;String&gt; weightList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">   <span class="keyword">private</span> ArrayList&lt;String&gt; zeroToNineList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">// 填充列表</span></span><br><span class="line">       heightList.clear();</span><br><span class="line">       weightList.clear();</span><br><span class="line">       zeroToNineList.clear();</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">150</span>; i &lt;= <span class="number">180</span>; i++)&#123;</span><br><span class="line">           heightList.add(i+<span class="string">""</span>); <span class="comment">// height: 150-180</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">30</span>; i &lt;= <span class="number">150</span>; i++)&#123;</span><br><span class="line">           weightList.add(i+<span class="string">""</span>); <span class="comment">// weight: 30.0-150.0</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)&#123;</span><br><span class="line">           zeroToNineList.add(i+<span class="string">""</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h3 id="动态创建对话框"><a href="#动态创建对话框" class="headerlink" title="动态创建对话框"></a>动态创建对话框</h3><h4 id="创建身高对话框（单栏）"><a href="#创建身高对话框（单栏）" class="headerlink" title="创建身高对话框（单栏）"></a>创建身高对话框（单栏）</h4><p>参数说明见后。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">heightBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        showChoiceDialog(R.id.wheel_view,heightList,heightBtn,</span><br><span class="line">                <span class="keyword">new</span> WheelView.OnWheelViewListener()&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSelected</span><span class="params">(<span class="keyword">int</span> selectedIndex, String item)</span> </span>&#123;</span><br><span class="line">                        selectText = item;</span><br><span class="line">                        height = Float.parseFloat(item)/<span class="number">100.0f</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="创建体重对话框（双栏）"><a href="#创建体重对话框（双栏）" class="headerlink" title="创建体重对话框（双栏）"></a>创建体重对话框（双栏）</h4><p>参数说明见后</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">weightBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        weight_Float = <span class="number">0</span>;</span><br><span class="line">        weight_Int = <span class="number">0</span>;</span><br><span class="line">        showChoiceDialog(R.id.wheel_view1, R.id.wheel_view2,</span><br><span class="line">                weightList, zeroToNineList, weightBtn,</span><br><span class="line">                <span class="keyword">new</span> WheelView.OnWheelViewListener()&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSelected</span><span class="params">(<span class="keyword">int</span> selectedIndex, String item)</span> </span>&#123;</span><br><span class="line">                        selectText_left = item;</span><br><span class="line">                        weight_Int = Integer.parseInt(item);</span><br><span class="line">                        weight = weight_Int + weight_Float * <span class="number">0.1f</span>;</span><br><span class="line">                        Log.d(<span class="string">"WEIGHT"</span>,weight+<span class="string">""</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="keyword">new</span> WheelView.OnWheelViewListener()&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSelected</span><span class="params">(<span class="keyword">int</span> selectedIndex, String item)</span> </span>&#123;</span><br><span class="line">                        selectText_right = item;</span><br><span class="line">                        weight_Float = Float.parseFloat(item);</span><br><span class="line">                        weight = weight_Int + weight_Float * <span class="number">0.1f</span>;</span><br><span class="line">                        Log.d(<span class="string">"WEIGHT"</span>,weight+<span class="string">""</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="对话框实现与显示"><a href="#对话框实现与显示" class="headerlink" title="对话框实现与显示"></a>对话框实现与显示</h3><h4 id="单滑动标尺对话框"><a href="#单滑动标尺对话框" class="headerlink" title="单滑动标尺对话框"></a>单滑动标尺对话框</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String selectText;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单滑动标尺对话框</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> wheelviewId 滑动标尺id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dataList 数据列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> infoBtn 激活对话框的按钮（用于显示所选项）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> listener 标尺滑动监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showChoiceDialog</span><span class="params">(<span class="keyword">int</span> wheelviewId, ArrayList&lt;String&gt; dataList,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">final</span> Button infoBtn, WheelView.OnWheelViewListener listener)</span></span>&#123;</span><br><span class="line">    selectText = <span class="string">""</span>;</span><br><span class="line">    View outerView = LayoutInflater.from(<span class="keyword">this</span>.getActivity()).inflate(R.layout.dialog_wheelview, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">final</span> WheelView wv = outerView.findViewById(wheelviewId);</span><br><span class="line">    wv.setOffset(<span class="number">2</span>);<span class="comment">// 对话框中当前项上面和下面的项数</span></span><br><span class="line">    wv.setItems(dataList);<span class="comment">// 设置数据源</span></span><br><span class="line">    wv.setSeletion(<span class="number">3</span>);<span class="comment">// 默认选中第三项</span></span><br><span class="line">    wv.setOnWheelViewListener(listener);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示对话框，点击确认后将所选项的值显示到Button上</span></span><br><span class="line">    <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>.getActivity())</span><br><span class="line">            .setView(outerView)</span><br><span class="line">            .setPositiveButton(<span class="string">"确认"</span>,</span><br><span class="line">                    <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">                            infoBtn.setText(selectText);</span><br><span class="line">                            infoBtn.setTextColor(green);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">            .setNegativeButton(<span class="string">"取消"</span>,<span class="keyword">null</span>)</span><br><span class="line">            .show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="双滑动标尺对话框"><a href="#双滑动标尺对话框" class="headerlink" title="双滑动标尺对话框"></a>双滑动标尺对话框</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String selectText_left;</span><br><span class="line"><span class="keyword">private</span> String selectText_right;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 双滑动标尺对话框</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> leftwheelviewId 左滑动标尺id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> rightwheelviewId 右滑动标尺id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dataList_L 左数据列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dataList_R 右数据列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> infoBtn 激活对话框的按钮（用于显示所选项）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> leftListener 左栏滑动监听器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> rightListener 右栏滑动监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showChoiceDialog</span><span class="params">(<span class="keyword">int</span> leftwheelviewId, <span class="keyword">int</span> rightwheelviewId,</span></span></span><br><span class="line"><span class="function"><span class="params">                              ArrayList&lt;String&gt; dataList_L, ArrayList&lt;String&gt; dataList_R,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">final</span> Button infoBtn,</span></span></span><br><span class="line"><span class="function"><span class="params">                              WheelView.OnWheelViewListener leftListener,</span></span></span><br><span class="line"><span class="function"><span class="params">                              WheelView.OnWheelViewListener rightListener)</span></span>&#123;</span><br><span class="line">    selectText_left = <span class="string">""</span>;</span><br><span class="line">    selectText_right = <span class="string">""</span>;</span><br><span class="line">    View outerView = LayoutInflater.from(<span class="keyword">this</span>.getActivity()).inflate(R.layout.dialog_twowheelview, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">final</span> WheelView wv_L = outerView.findViewById(leftwheelviewId);</span><br><span class="line">    wv_L.setOffset(<span class="number">2</span>);<span class="comment">// 对话框中当前项上面和下面的项数</span></span><br><span class="line">    wv_L.setItems(dataList_L);<span class="comment">// 设置数据源</span></span><br><span class="line">    wv_L.setSeletion(<span class="number">3</span>);<span class="comment">// 默认初始选中第三项</span></span><br><span class="line">    wv_L.setOnWheelViewListener(leftListener);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> WheelView wv_R = outerView.findViewById(rightwheelviewId);</span><br><span class="line">    wv_R.setOffset(<span class="number">2</span>);<span class="comment">// 对话框中当前项上面和下面的项数</span></span><br><span class="line">    wv_R.setItems(dataList_R);<span class="comment">// 设置数据源</span></span><br><span class="line">    wv_R.setSeletion(<span class="number">3</span>);<span class="comment">// 默认初始选中第三项</span></span><br><span class="line">    wv_R.setOnWheelViewListener(rightListener);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示对话框，点击确认后将所选项的值显示到Button上</span></span><br><span class="line">    <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>.getActivity())</span><br><span class="line">            .setView(outerView)</span><br><span class="line">            .setPositiveButton(<span class="string">"确认"</span>,</span><br><span class="line">                    <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">                            String text = selectText_left + <span class="string">"."</span> + selectText_right;</span><br><span class="line">                            infoBtn.setText(text);</span><br><span class="line">                            infoBtn.setTextColor(green);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">            .setNegativeButton(<span class="string">"取消"</span>,<span class="keyword">null</span>)</span><br><span class="line">            .show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以上，就实现了一个基本的单/双滑动标尺啦，虽然基本上放的都是代码= =不过注释写的算挺清楚的了，还有不清楚的可以留言呀~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　本系列第三篇。本篇讲的是很常见的身高年龄选择器，可以定制成单栏或者双栏显示模式~&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://lemonxq.cn/categories/Android/"/>
    
    
      <category term="WheelView" scheme="http://lemonxq.cn/tags/WheelView/"/>
    
  </entry>
  
  <entry>
    <title>Android项目开发笔记之Material日历模块实现（支持滑动/直接选择年月）</title>
    <link href="http://lemonxq.cn/2018/03/11/Android%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E4%B9%8BMaterial%E6%97%A5%E5%8E%86%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%EF%BC%88%E6%94%AF%E6%8C%81%E6%BB%91%E5%8A%A8or%E7%9B%B4%E6%8E%A5%E9%80%89%E6%8B%A9%E5%B9%B4%E6%9C%88%EF%BC%89/"/>
    <id>http://lemonxq.cn/2018/03/11/Android项目开发笔记之Material日历模块实现（支持滑动or直接选择年月）/</id>
    <published>2018-03-10T16:26:38.000Z</published>
    <updated>2018-09-25T02:04:21.714Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　本系列第二篇（隔了好久的感觉orz）。本篇主要讲的是很多App里都会有的日历模块实现，基于<a href="https://github.com/huanghaibin-dev/CalendarView" target="_blank" rel="noopener">Github上一个优秀的开源项目</a>进行了扩展，支持滑动切换月份以及下拉直接选择年月~<br><a id="more"></a></p>
<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p>先放一下实现的效果图：<br><img src="http://okwl1c157.bkt.clouddn.com/android-calendar1.jpg" alt=""></p>
<p><img src="http://okwl1c157.bkt.clouddn.com/android-calendar2.jpg" alt=""></p>
<h2 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h2><ul>
<li>在app/build.gradle的dependencies中增加：<br><code>compile &#39;com.haibin:calendarview:3.2.0&#39;</code></li>
<li>重新sync</li>
</ul>
<h2 id="定义布局"><a href="#定义布局" class="headerlink" title="定义布局"></a>定义布局</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.haibin.calendarview.CalendarView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/history_calendarView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_weight</span>=<span class="string">"5"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@color/colorPrimary"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:month_view</span>=<span class="string">"你的包名.CustomMonthView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:week_bar_view</span>=<span class="string">"你的包名.EnglishWeekbar"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:week_line_background</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:calendar_height</span>=<span class="string">"37dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:current_day_text_color</span>=<span class="string">"#d94373"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:selected_theme_color</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:lunar_text_size</span>=<span class="string">"0sp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:min_year</span>=<span class="string">"2018"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:max_year</span>=<span class="string">"2050"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:month_view_show_mode</span>=<span class="string">"mode_all"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:other_month_text_color</span>=<span class="string">"#82ffffff"</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自定义MonthView-选中日期时效果-amp-特殊事件效果"><a href="#自定义MonthView-选中日期时效果-amp-特殊事件效果" class="headerlink" title="自定义MonthView(选中日期时效果 &amp; 特殊事件效果)"></a>自定义MonthView(选中日期时效果 &amp; 特殊事件效果)</h2><ul>
<li>新建CustomMonthView.java,代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomMonthView</span> <span class="keyword">extends</span> <span class="title">MonthView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mRadius;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomMonthView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        mSchemePaint.setColor(Color.WHITE);</span><br><span class="line">        mSchemeTextPaint.setColor(Color.GREEN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPreviewHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mRadius = Math.min(mItemWidth, mItemHeight) / <span class="number">5</span> * <span class="number">2</span>;</span><br><span class="line">        mCurMonthTextPaint.setColor(Color.WHITE);<span class="comment">// 白色圆圈</span></span><br><span class="line">        mSchemePaint.setStyle(Paint.Style.FILL);</span><br><span class="line">        mSelectTextPaint.setColor(getResources().getColor(R.color.colorPrimary));</span><br><span class="line">        setLayerType( LAYER_TYPE_SOFTWARE , <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLoopStart</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onDrawSelected</span><span class="params">(Canvas canvas, Calendar calendar, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">boolean</span> hasScheme)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 画白色圆圈</span></span><br><span class="line">        <span class="keyword">int</span> cx = x + mItemWidth / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> cy = y + mItemHeight / <span class="number">2</span>;</span><br><span class="line">        canvas.drawCircle(cx, cy, mRadius, mSelectedPaint);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDrawScheme</span><span class="params">(Canvas canvas, Calendar calendar, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 画右上角白点，表示特殊日期</span></span><br><span class="line">        <span class="keyword">int</span> cx = x + <span class="number">4</span>*mItemWidth / <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> cy = y + mItemHeight / <span class="number">5</span>;</span><br><span class="line">        canvas.drawCircle(cx, cy, mRadius/<span class="number">4</span>, mSchemePaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDrawText</span><span class="params">(Canvas canvas, Calendar calendar, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">boolean</span> hasScheme, <span class="keyword">boolean</span> isSelected)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> baselineY = mTextBaseLine + y;</span><br><span class="line">        <span class="keyword">int</span> cx = x + mItemWidth / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (isSelected) &#123;</span><br><span class="line">            canvas.drawText(String.valueOf(calendar.getDay()),</span><br><span class="line">                    cx,</span><br><span class="line">                    baselineY,</span><br><span class="line">                    mSelectTextPaint);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (hasScheme) &#123;</span><br><span class="line">            canvas.drawText(String.valueOf(calendar.getDay()),</span><br><span class="line">                    cx,</span><br><span class="line">                    baselineY,</span><br><span class="line">                    calendar.isCurrentDay() ? mCurDayTextPaint :</span><br><span class="line">                            calendar.isCurrentMonth() ? mSchemeTextPaint : mOtherMonthTextPaint);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            canvas.drawText(String.valueOf(calendar.getDay()), cx, baselineY,</span><br><span class="line">                    calendar.isCurrentDay() ? mCurDayTextPaint :</span><br><span class="line">                            calendar.isCurrentMonth() ? mCurMonthTextPaint : mOtherMonthTextPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="自定义WeekBar（英文版）"><a href="#自定义WeekBar（英文版）" class="headerlink" title="自定义WeekBar（英文版）"></a>自定义WeekBar（英文版）</h2><p>默认Weekbar是中文的，个人觉得英文的看起来比较舒服，所以自定义了一个，步骤如下：</p>
<ol>
<li>新建english_weekbar.xml，内容是7个TextView,代表周一到周日，代码比较简单就不贴了</li>
<li>新建EnglishWeekbar.java,加载english_weekbar.xml布局,代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EnglishWeekbar</span> <span class="keyword">extends</span> <span class="title">WeekBar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EnglishWeekbar</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.english_week_bar, <span class="keyword">this</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="制作下拉选择控件（使用Spinner）"><a href="#制作下拉选择控件（使用Spinner）" class="headerlink" title="制作下拉选择控件（使用Spinner）"></a>制作下拉选择控件（使用Spinner）</h2><p>同样介绍一个github上的<a href="https://github.com/jaredrummler/MaterialSpinner" target="_blank" rel="noopener">项目</a>，可定制项比较丰富，且有Material效果。</p>
<ul>
<li>引入：<code>implementation &#39;com.jaredrummler:material-spinner:1.2.4@aar&#39;</code></li>
<li>xml中使用：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.jaredrummler.materialspinner.MaterialSpinner</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">"@+id/dateSpinner"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">"150dp"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_marginStart</span>=<span class="string">"85dp"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">app:ms_background_color</span>=<span class="string">"@color/colorPrimary"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">app:ms_background_selector</span>=<span class="string">"@color/colorPrimary"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">app:ms_arrow_tint</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">app:ms_dropdown_height</span>=<span class="string">"250dp"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">app:ms_hint_color</span>=<span class="string">"@color/black"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">app:ms_text_color</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:textSize</span>=<span class="string">"18sp"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>activity中往Spinner填充日期数据（范围为2018年-2050年）<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> currentIndex;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    currentIndex = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> cur_year = Util.getYear(<span class="keyword">new</span> Date());</span><br><span class="line">    <span class="keyword">int</span> cur_month = Util.getMonth(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; dateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> year=<span class="number">2018</span>; year&lt;=<span class="number">2050</span>; year++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> month=<span class="number">1</span>;month&lt;=<span class="number">12</span>;month++)&#123;</span><br><span class="line">            dateList.add(year+<span class="string">"-"</span>+month);</span><br><span class="line">            <span class="keyword">if</span>(year &lt;= cur_year &amp;&amp; month &lt; cur_month) currentIndex++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dateSpinner.setItems(dateList);<span class="comment">// 填充数据</span></span><br><span class="line">    dateSpinner.setSelectedIndex(currentIndex);<span class="comment">// 默认选中当前月</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><h2 id="控件组合"><a href="#控件组合" class="headerlink" title="控件组合"></a>控件组合</h2>　　不难发现，上面定义的这两个控件其实是没有关系的，那么怎么实现滑动切换的时候，Spinner显示的日期也会改变，而下拉选择某月后，CalendarView又会滑动到目标月份呢？其实也不难，只需要监听二者相应的事件，再进行处理即可，具体步骤如下：</li>
</ul>
<ol>
<li>监听calendarView的onMonthChanged事件<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 滑动日历时更改Title显示,根据与当前月份的偏移量计算目标月份在Spinner中的索引值</span></span><br><span class="line">calendarView.setOnMonthChangeListener(<span class="keyword">new</span> CalendarView.OnMonthChangeListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMonthChange</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> cur_month = calendarView.getCurMonth();</span><br><span class="line">        <span class="keyword">int</span> cur_year = calendarView.getCurYear();</span><br><span class="line">        <span class="keyword">int</span> offset;</span><br><span class="line">        <span class="keyword">if</span>(cur_year == year)&#123;</span><br><span class="line">            offset = month - cur_month;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            offset = (year - cur_year)*<span class="number">12</span> + month - cur_month;</span><br><span class="line">        &#125;</span><br><span class="line">        dateSpinner.setSelectedIndex(currentIndex + offset);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
<li>监听dateSpinner的onItemSelected事件<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 年月选择监听,提取点击项的年份及月份，滑动日历至目标月份</span></span><br><span class="line">dateSpinner.setOnItemSelectedListener(<span class="keyword">new</span> MaterialSpinner.OnItemSelectedListener&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemSelected</span><span class="params">(MaterialSpinner view, <span class="keyword">int</span> position, <span class="keyword">long</span> id, String item)</span> </span>&#123;</span><br><span class="line">        String[] dateStr = item.split(<span class="string">"-"</span>);</span><br><span class="line">        <span class="keyword">int</span> year = Integer.parseInt(dateStr[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> month = Integer.parseInt(dateStr[<span class="number">1</span>]);</span><br><span class="line">        calendarView.scrollToCalendar(year,month,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>使用calendarView.setSchemeDate(dateList)可以设置特殊日期</li>
<li>com.haibin.calendarview中也有一个Calendar类，不要和java.util.Calendar混了，特别在进行java.util.Date和calendar的转换时需要注意。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　本系列第二篇（隔了好久的感觉orz）。本篇主要讲的是很多App里都会有的日历模块实现，基于&lt;a href=&quot;https://github.com/huanghaibin-dev/CalendarView&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github上一个优秀的开源项目&lt;/a&gt;进行了扩展，支持滑动切换月份以及下拉直接选择年月~&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://lemonxq.cn/categories/Android/"/>
    
    
      <category term="CalendarView" scheme="http://lemonxq.cn/tags/CalendarView/"/>
    
      <category term="Material" scheme="http://lemonxq.cn/tags/Material/"/>
    
  </entry>
  
  <entry>
    <title>Android项目开发笔记之登录注册模块实现（客户端+服务端）</title>
    <link href="http://lemonxq.cn/2018/03/11/Android%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%EF%BC%88%E5%AE%A2%E6%88%B7%E7%AB%AF+%E6%9C%8D%E5%8A%A1%E7%AB%AF%EF%BC%89/"/>
    <id>http://lemonxq.cn/2018/03/11/Android项目开发笔记之登录注册模块实现（客户端+服务端）/</id>
    <published>2018-03-10T16:24:31.000Z</published>
    <updated>2018-09-25T02:04:21.715Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　断断续续开发了几个月的App终于告一段落，虽然它可能还很不完美，不过作为上手Android的第一个完整项目，确实从中学到了蛮多，所以开个系列记录一下~本篇先从基本上每个App都会有的<strong>登录注册</strong>讲起，包含自动登录、记住密码功能的实现=w=<br><a id="more"></a></p>
<h2 id="实现：登录功能"><a href="#实现：登录功能" class="headerlink" title="实现：登录功能"></a>实现：登录功能</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>　　整个登录功能的逻辑为：用户提交账号、密码-&gt;判断账号密码是否为空-&gt;选项处理（自动登录及记住密码）-&gt;向服务端LoginServlet提交账号密码-&gt;服务端查询数据库判断账号是否存在-&gt;服务端查询数据库判断账号密码是否匹配-&gt;返回resCode（登录成功/失败）</p>
<h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p><strong>注： 客户端使用Litepal进行数据库的管理，关于Litepal的配置自行百度=。=</strong></p>
<ol>
<li>在LogInActivity启动时要先判断用户上次是否有勾选了自动登录或记住密码，这个是通过SharedPreferences实现的，代码如下：</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_login);</span><br><span class="line"></span><br><span class="line">    initComponents();</span><br><span class="line">    setListeners();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动填充</span></span><br><span class="line">    SharedPreferencesUtil spu = <span class="keyword">new</span> SharedPreferencesUtil(<span class="keyword">this</span>);</span><br><span class="line">    Boolean isRemember = (Boolean) spu.getParam(<span class="string">"isRememberPwd"</span>,<span class="keyword">false</span>);</span><br><span class="line">    Boolean isAutoLogin = (Boolean) spu.getParam(<span class="string">"isAutoLogin"</span>,<span class="keyword">false</span>);</span><br><span class="line">    <span class="comment">// SharedPreference获取用户账号密码，存在则填充</span></span><br><span class="line">    String account = (String) spu.getParam(<span class="string">"account"</span>,<span class="string">""</span>);</span><br><span class="line">    String pwd = (String)spu.getParam(<span class="string">"pwd"</span>,<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">if</span>(!account.equals(<span class="string">""</span>) &amp;&amp; !pwd.equals(<span class="string">""</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(isRemember)&#123;</span><br><span class="line">            accountText.setText(account);</span><br><span class="line">            passwordText.setText(pwd);</span><br><span class="line">            isRememberPwd.setChecked(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(isAutoLogin)</span><br><span class="line">            Login();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.判断账号密码是否合理，这里设置为只有手机/邮箱才能登录</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">checkDataValid</span><span class="params">(String account,String pwd)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(TextUtils.isEmpty(account) | TextUtils.isEmpty(pwd))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"账号或密码不能为空"</span>;</span><br><span class="line">    <span class="keyword">if</span>(account.length() != <span class="number">11</span> &amp;&amp; !account.contains(<span class="string">"@"</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"用户名不是有效的手机或邮箱"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.记录自动登录及记住密码选项，同时将最近登录的账号密码写入SharedPreferences中<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OptionHandle</span><span class="params">(String account,String pwd)</span></span>&#123;</span><br><span class="line">    SharedPreferences.Editor editor = getSharedPreferences(<span class="string">"UserData"</span>,MODE_PRIVATE).edit();</span><br><span class="line">    SharedPreferencesUtil spu = <span class="keyword">new</span> SharedPreferencesUtil(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">if</span>(isRememberPwd.isChecked())&#123;</span><br><span class="line">        editor.putBoolean(<span class="string">"isRememberPwd"</span>,<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 保存账号密码</span></span><br><span class="line">        spu.setParam(<span class="string">"account"</span>,account);</span><br><span class="line">        spu.setParam(<span class="string">"pwd"</span>,pwd);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        editor.putBoolean(<span class="string">"isRememberPwd"</span>,<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(isAutoLogin.isChecked())&#123;</span><br><span class="line">        editor.putBoolean(<span class="string">"isAutoLogin"</span>,<span class="keyword">true</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        editor.putBoolean(<span class="string">"isAutoLogin"</span>,<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    editor.apply();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>4.向服务端发起POST请求，这里将账号密码封装为JSON字符串后再提交，JSON的好处大家都懂得~<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录请求</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoginPost</span><span class="params">(String account, String password, <span class="keyword">final</span> Handler mHandler)</span></span>&#123;</span><br><span class="line">    <span class="keyword">final</span> CommonRequest request = <span class="keyword">new</span> CommonRequest();</span><br><span class="line">    <span class="comment">// 填充参数</span></span><br><span class="line">    request.addRequestParam(<span class="string">"account"</span>,account);</span><br><span class="line">    request.addRequestParam(<span class="string">"pwd"</span>,password);</span><br><span class="line"></span><br><span class="line">    infoPost(Consts.URL_Login, request.getJsonStr());</span><br><span class="line">    <span class="comment">// 隔一段时间（2.5s）后再发送信息给LogInActivity，因为网络请求是耗时操作</span></span><br><span class="line">    mHandler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            Message message = <span class="keyword">new</span> Message();</span><br><span class="line">            message.what = <span class="number">1</span>;</span><br><span class="line">            mHandler.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">2500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 通用的POST信息方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">infoPost</span><span class="params">(String url, String json)</span></span>&#123;</span><br><span class="line">    HttpUtil.sendPost(url,json,<span class="keyword">new</span> okhttp3.Callback() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            CommonResponse res = <span class="keyword">new</span> CommonResponse(response.body().string());</span><br><span class="line">            resCode = res.getResCode();</span><br><span class="line">            resMsg = res.getResMsg();</span><br><span class="line">            property = res.getPropertyMap();</span><br><span class="line">            dataList = res.getDataList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            showResponse(<span class="string">"Network ERROR"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>5.以上3步合起来即为Login方法，代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  POST方式Login</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 前端参数校验，防SQL注入</span></span><br><span class="line">    account = Util.StringHandle(accountText.getText().toString());</span><br><span class="line">    password = Util.StringHandle(passwordText.getText().toString());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查数据格式是否正确</span></span><br><span class="line">    String resMsg = checkDataValid(account,password);</span><br><span class="line">    <span class="keyword">if</span>(!resMsg.equals(<span class="string">""</span>))&#123;</span><br><span class="line">        showResponse(resMsg);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示进度条</span></span><br><span class="line">    progressDialog = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</span><br><span class="line">    progressDialog.setMessage(<span class="string">"登录中..."</span>);</span><br><span class="line">    progressDialog.setCancelable(<span class="keyword">false</span>);</span><br><span class="line">    progressDialog.show();</span><br><span class="line"></span><br><span class="line">    OptionHandle(account,password);<span class="comment">// 处理自动登录及记住密码</span></span><br><span class="line"></span><br><span class="line">    server.LoginPost(account,password,loginHandler);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>6.loginHandler根据得到的登录状态码进行相应处理：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint</span>(<span class="string">"HandlerLeak"</span>)</span><br><span class="line">Handler loginHandler = <span class="keyword">new</span> Handler()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (msg.what)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                String resCode = server.getResCode();</span><br><span class="line">                String resMsg = server.getResMsg();</span><br><span class="line">                <span class="comment">// 登录成功</span></span><br><span class="line">                <span class="keyword">if</span> (resCode != <span class="keyword">null</span> &amp;&amp; resCode.equals(Consts.SUCCESSCODE_LOGIN)) &#123;</span><br><span class="line">                    <span class="comment">// 查找本地数据库中是否已存在当前用户,不存在则新建用户并写入</span></span><br><span class="line">                    User user = DataSupport.where(<span class="string">"account=?"</span>,account).findFirst(User.class);</span><br><span class="line">                    <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">                        user = <span class="keyword">new</span> User();</span><br><span class="line">                        user.setAccount(account);</span><br><span class="line">                        user.setPassword(password);</span><br><span class="line">                        user.setVisitor(<span class="keyword">false</span>);</span><br><span class="line">                        user.save();</span><br><span class="line">                    &#125;</span><br><span class="line">                    UserManager.setCurrentUser(user);<span class="comment">// 设置当前用户</span></span><br><span class="line"></span><br><span class="line">                    autoStartActivity(MainActivity.class);</span><br><span class="line">                &#125;</span><br><span class="line">                progressDialog.dismiss();<span class="comment">// 隐藏进度条</span></span><br><span class="line">                showResponse(resMsg);<span class="comment">// Toast相应信息</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p><strong>注：服务端使用Java Servlet实现，这个网上也有很多资料，不多说</strong></p>
<ol>
<li>因为使用的是POST方式，所以以下步骤均在<strong>Servlet的**</strong>doPost**中进行;</li>
<li>获取客户端发来的请求，将request对象转化为字符串，进而恢复其JSON格式<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// request转字符串</span></span><br><span class="line">BufferedReader read = request.getReader();</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">String line = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span> ((line = read.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">    sb.append(line);</span><br><span class="line">&#125;</span><br><span class="line">String req = sb.toString();</span><br><span class="line"><span class="comment">// 获取 客户端 发来的请求，恢复其Json格式——&gt;需要客户端发请求时也封装成Json格式</span></span><br><span class="line">JSONObject object = JSONObject.fromObject(req);</span><br></pre></td></tr></table></figure></li>
<li>提取json中的requestCode和requestParam，requestCode可以用于区分同一类请求下的不同子请求，eg.获取数据库的不同信息<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// requestCode、requestParam要和客户端CommonRequest封装时候的名字一致  </span></span><br><span class="line">String requestCode = object.getString(<span class="string">"requestCode"</span>);  <span class="comment">// 暂时不用</span></span><br><span class="line">JSONObject requestParam = object.getJSONObject(<span class="string">"requestParam"</span>); </span><br></pre></td></tr></table></figure></li>
<li><p>提取账号密码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// json中提取参数</span></span><br><span class="line">String account = requestParam.getString(<span class="string">"account"</span>);</span><br><span class="line">String pwd = requestParam.getString(<span class="string">"pwd"</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>定义查询语句、查询结果集、Response信息对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义的结果信息类  </span></span><br><span class="line">CommonResponse res = <span class="keyword">new</span> CommonResponse();  </span><br><span class="line"></span><br><span class="line"><span class="comment">// Sql查询语句</span></span><br><span class="line">String sqlQueryExist = <span class="string">"select * from "</span>+DBUtil.table_user_pwd+<span class="string">" where username=?;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询结果</span></span><br><span class="line">ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">ArrayList&lt;String&gt; args = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br></pre></td></tr></table></figure>
</li>
<li><p>核心逻辑：填充查询参数-&gt;执行查询语句-&gt;判断账号是否存在-&gt;若存在则查询密码是否匹配-&gt;否则返回错误信息</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	args.add(account);</span><br><span class="line">	resultSet = DBUtil.query(sqlQueryExist, args);				</span><br><span class="line">	<span class="keyword">if</span>(resultSet.next())&#123;<span class="comment">// 账号存在，查询密码是否正确</span></span><br><span class="line">		<span class="keyword">if</span>(resultSet.getString(<span class="string">"pwd"</span>).equals(pwd))&#123;<span class="comment">// 密码正确</span></span><br><span class="line">			res.setResult(<span class="string">"100"</span>, <span class="string">"登录成功！"</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;<span class="comment">// 密码错误</span></span><br><span class="line">			res.setResult(<span class="string">"201"</span>, <span class="string">"密码错误！"</span>);</span><br><span class="line">		&#125;				</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;<span class="comment">// 账号不存在</span></span><br><span class="line">		res.setResult(<span class="string">"202"</span>, <span class="string">"账号不存在，请先注册！"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">	res.setResult(<span class="string">"300"</span>, <span class="string">"数据库查询错误"</span>);</span><br><span class="line">	e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>将结果封装为Json格式返回给客户端</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意实际网络传输时还是传输json的字符串</span></span><br><span class="line">String resStr = JSONObject.fromObject(res).toString();</span><br><span class="line">response.getWriter().append(resStr).flush();</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="实现：注册功能"><a href="#实现：注册功能" class="headerlink" title="实现：注册功能"></a>实现：注册功能</h2><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>　　注册功能逻辑为：用户提交账号、密码、确认密码-&gt;判断三者是否均不为空-&gt;判断两次输入的密码是否一致-&gt;判断用户名是否合理-&gt;提交账号密码至服务端-&gt;服务端查询账号是否已存在-&gt;若不存在则插入账号密码至user_pwd表中-&gt;向客户端返回信息</p>
<h3 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h3><p>注释写的很清楚了，直接放源码~</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  POST方式Register</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建请求体对象</span></span><br><span class="line">    CommonRequest request = <span class="keyword">new</span> CommonRequest();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前端参数校验，防SQL注入</span></span><br><span class="line">    String account = Util.StringHandle(accountText.getText().toString());</span><br><span class="line">    String pwd = Util.StringHandle(pwdText.getText().toString());</span><br><span class="line">    String pwd_confirm = Util.StringHandle(confirmPwdText.getText().toString());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查数据格式是否正确</span></span><br><span class="line">    String resMsg = checkDataValid(account,pwd,pwd_confirm);</span><br><span class="line">    <span class="keyword">if</span>(!resMsg.equals(<span class="string">""</span>))&#123;</span><br><span class="line">        showResponse(resMsg);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 填充参数</span></span><br><span class="line">    request.addRequestParam(<span class="string">"account"</span>,account);</span><br><span class="line">    request.addRequestParam(<span class="string">"pwd"</span>,pwd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// POST请求</span></span><br><span class="line">    HttpUtil.sendPost(Consts.URL_Register, request.getJsonStr(), <span class="keyword">new</span> okhttp3.Callback() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            CommonResponse res = <span class="keyword">new</span> CommonResponse(response.body().string());</span><br><span class="line">            String resCode = res.getResCode();</span><br><span class="line">            String resMsg = res.getResMsg();</span><br><span class="line">            <span class="comment">// 显示注册结果</span></span><br><span class="line">            showResponse(resMsg);</span><br><span class="line">            <span class="comment">// 注册成功</span></span><br><span class="line">            <span class="keyword">if</span> (resCode.equals(Consts.SUCCESSCODE_REGISTER)) &#123;</span><br><span class="line">                finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            showResponse(<span class="string">"Network ERROR"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">checkDataValid</span><span class="params">(String account,String pwd,String pwd_confirm)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(TextUtils.isEmpty(account) | TextUtils.isEmpty(pwd) | TextUtils.isEmpty(pwd_confirm))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"账号或密码不能为空"</span>;</span><br><span class="line">    <span class="keyword">if</span>(!pwd.equals(pwd_confirm))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"两次输入的密码需保持一致"</span>;</span><br><span class="line">    <span class="keyword">if</span>(account.length() != <span class="number">11</span> &amp;&amp; !account.contains(<span class="string">"@"</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"用户名不是有效的手机号或邮箱"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a>服务端</h3><ol>
<li>1-4步与登录功能里的一致，不再赘述</li>
<li>核心逻辑：填充查询参数-&gt;查询账号是否存在-&gt;若不存在执行Insert操作，同时更新userInfo表-&gt;向客户端返回消息<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义的结果信息类  </span></span><br><span class="line">CommonResponse res = <span class="keyword">new</span> CommonResponse();  </span><br><span class="line"></span><br><span class="line"><span class="comment">// Sql语句</span></span><br><span class="line">String sqlQueryExist = <span class="string">"select * from "</span>+DBUtil.table_user_pwd+<span class="string">" where username=?;"</span>;</span><br><span class="line">String sqlInsert = <span class="string">"insert into "</span>+DBUtil.table_user_pwd+<span class="string">"(username,pwd)"</span>+</span><br><span class="line">		<span class="string">" values(?,?);"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询结果</span></span><br><span class="line">ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">ArrayList&lt;String&gt; args = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	DBUtil.checkConnection();</span><br><span class="line">	args.add(account);</span><br><span class="line">	resultSet = DBUtil.query(sqlQueryExist, args);				</span><br><span class="line">	<span class="keyword">if</span>(resultSet.next())&#123;<span class="comment">// resSet不为空</span></span><br><span class="line">		res.setResult(<span class="string">"203"</span>, <span class="string">"账号已存在，请登录"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		args.add(pwd);</span><br><span class="line">		<span class="keyword">int</span> rows = DBUtil.update(sqlInsert, args);<span class="comment">// 返回插入后受影响的行数</span></span><br><span class="line">		<span class="keyword">if</span>(rows==<span class="number">1</span>)&#123;<span class="comment">// 插入userpwd表成功</span></span><br><span class="line">			String sqlQueryId = <span class="string">"select userId from "</span>+DBUtil.table_user_pwd+</span><br><span class="line">					<span class="string">" where username=?;"</span>;</span><br><span class="line">			args.clear();</span><br><span class="line">			args.add(account);</span><br><span class="line">			ResultSet resSet = DBUtil.query(sqlQueryId, args);</span><br><span class="line">			<span class="keyword">if</span>(resSet.next())&#123;</span><br><span class="line">				<span class="comment">// 获取用户id,更新userInfo表</span></span><br><span class="line">				String userId = resSet.getInt(<span class="string">"userId"</span>)+<span class="string">""</span>;</span><br><span class="line">				String sqlInsertId = <span class="string">"insert into "</span>+DBUtil.table_user_info+</span><br><span class="line">						<span class="string">"(userId)"</span>+<span class="string">" values(?);"</span>;</span><br><span class="line">				args.clear();</span><br><span class="line">				args.add(userId);</span><br><span class="line">				rows = DBUtil.update(sqlInsertId, args);</span><br><span class="line">				<span class="keyword">if</span>(rows == <span class="number">1</span> )&#123;</span><br><span class="line">					res.setResult(<span class="string">"101"</span>, <span class="string">"注册成功"</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			res.setResult(<span class="string">"204"</span>, <span class="string">"用户信息插入失败"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">	res.setResult(<span class="string">"300"</span>, <span class="string">"数据库查询错误"</span>);</span><br><span class="line">	e.printStackTrace();</span><br><span class="line">&#125;        </span><br><span class="line"><span class="comment">// 将结果封装成Json格式准备返回给客户端，但实际网络传输时还是传输json的字符串</span></span><br><span class="line">String resStr = JSONObject.fromObject(res).toString();</span><br><span class="line">response.getWriter().append(resStr).flush();</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>　　登录注册模块到这里就完成啦！里面涉及到一些功能类和功能函数的封装，不难实现，源码放<a href="https://github.com/Lemon-XQ/PregnantMonitor" target="_blank" rel="noopener">Github</a>了，欢迎star~　　</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　断断续续开发了几个月的App终于告一段落，虽然它可能还很不完美，不过作为上手Android的第一个完整项目，确实从中学到了蛮多，所以开个系列记录一下~本篇先从基本上每个App都会有的&lt;strong&gt;登录注册&lt;/strong&gt;讲起，包含自动登录、记住密码功能的实现=w=&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://lemonxq.cn/categories/Android/"/>
    
    
      <category term="登录注册" scheme="http://lemonxq.cn/tags/%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C/"/>
    
      <category term="服务端" scheme="http://lemonxq.cn/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="客户端" scheme="http://lemonxq.cn/tags/%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>[自制工具]实现自动推送Hexo博客文章至百度</title>
    <link href="http://lemonxq.cn/2017/11/23/%5B%E8%87%AA%E5%88%B6%E5%B7%A5%E5%85%B7%5D%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81Hexo%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E8%87%B3%E7%99%BE%E5%BA%A6/"/>
    <id>http://lemonxq.cn/2017/11/23/[自制工具]实现自动推送Hexo博客文章至百度/</id>
    <published>2017-11-23T04:50:06.000Z</published>
    <updated>2018-09-25T02:04:21.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　我们在博客发布文章时，总是希望百度能尽快收录我们的文章，但是如果傻傻等百度爬虫爬到我们这种小站点的文章……不知道要等到何年何月= =基于此，百度站长平台提供了<strong>主动推送文章至百度的接口</strong>。但是这个接口要求我们先把所有文章的URL一行一个写入urls.txt中。然而还是太麻烦了，每次写完文章还得再自己<strong>手动更新urls.txt</strong>。所以，我用python做了一个小工具，可以一键/一条命令<strong>自动推送所有文章至百度</strong>~适合我这种懒人使用2333<br><a id="more"></a></p>
<h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>　　原理其实很简单粗暴——就是写个爬虫爬取你博客里的所有文章URL，然后逐行写入urls.txt，再使用百度站长平台提供的接口完成推送。恩，听上去就是这么简单……然而渣渣如我在制作过程中还是遇到了不少问题，略去不表= =</p>
<h3 id="使用前提"><a href="#使用前提" class="headerlink" title="使用前提"></a>使用前提</h3><ul>
<li>确保电脑中已安装<strong>python</strong>;</li>
<li>确保已安装<strong>pyyaml</strong>模块，安装方法：<code>pip install pyyaml</code></li>
<li>Ubuntu用户请确保已安装<strong>curl</strong>命令，安装方法：<code>sudo apt install curl</code></li>
<li>确保你的博客基于Hexo搭建且主题为<strong>Next | Jacman | Yelee | Apollo</strong>【暂时只测试了这几个主题，后续有需要的话再增加】;</li>
<li>有<a href="http://ziyuan.baidu.com/linksubmit/index" target="_blank" rel="noopener">百度站长平台</a>账号且已绑定你的博客站点，方法平台里写的很清楚了;</li>
</ul>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="Windows："><a href="#Windows：" class="headerlink" title="Windows："></a>Windows：</h4><ul>
<li>直接在<a href="https://github.com/Lemon-XQ/Hexo-BaiduPushTool" target="_blank" rel="noopener">我的项目主页</a> <strong>download zip</strong> 或者<strong> git bash</strong>下执行<code>git clone https://github.com/Lemon-XQ/Hexo-BaiduPushTool.git</code></li>
<li>打开<strong>_urlconfig.yml</strong>，填入你的<strong>博客地址、使用主题、百度主动推送接口</strong>，保存</li>
<li>双击<strong>baidupush.bat</strong>文件，等待推送完成</li>
</ul>
<h4 id="Linux："><a href="#Linux：" class="headerlink" title="Linux："></a>Linux：</h4><ul>
<li><code>git clone https://github.com/Lemon-XQ/Hexo-BaiduPushTool.git</code></li>
<li><code>cd Hexo-BaiduPushTool</code></li>
<li><code>vi _urlconfig.yml</code> 填写相应信息后保存退出</li>
<li><code>python BaiduPush.py</code> 等待推送完成</li>
</ul>
<h4 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h4><p><img src="http://okwl1c157.bkt.clouddn.com/baidupush_linux.png" alt=""></p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>填写配置文件时，请注意yaml语法！即<strong>URL:</strong>后需加一个空格！否则会报错</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>　　源码见<a href="https://github.com/Lemon-XQ/Hexo-BaiduPushTool" target="_blank" rel="noopener">github</a>，如果有bug或者是建议麻烦跟我说一下啦~如果觉得还行的话给个star就更好啦（比心）~<strong>最后,github求一波互粉呀（逃</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　我们在博客发布文章时，总是希望百度能尽快收录我们的文章，但是如果傻傻等百度爬虫爬到我们这种小站点的文章……不知道要等到何年何月= =基于此，百度站长平台提供了&lt;strong&gt;主动推送文章至百度的接口&lt;/strong&gt;。但是这个接口要求我们先把所有文章的URL一行一个写入urls.txt中。然而还是太麻烦了，每次写完文章还得再自己&lt;strong&gt;手动更新urls.txt&lt;/strong&gt;。所以，我用python做了一个小工具，可以一键/一条命令&lt;strong&gt;自动推送所有文章至百度&lt;/strong&gt;~适合我这种懒人使用2333&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="SEO" scheme="http://lemonxq.cn/tags/SEO/"/>
    
      <category term="Python" scheme="http://lemonxq.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之静态+动态背景设置</title>
    <link href="http://lemonxq.cn/2017/11/20/Hexo%E4%B9%8B%E9%9D%99%E6%80%81+%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF%E8%AE%BE%E7%BD%AE/"/>
    <id>http://lemonxq.cn/2017/11/20/Hexo之静态+动态背景设置/</id>
    <published>2017-11-19T16:27:39.000Z</published>
    <updated>2018-09-25T02:04:21.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　实现背景图更换及平铺，以及引入动态背景（可交互）<br><a id="more"></a></p>
<h2 id="静态background设置"><a href="#静态background设置" class="headerlink" title="静态background设置"></a>静态background设置</h2><ol>
<li><p>打开<code>博客根目录/themes/next/source/css/_custom/custom.styl</code>文件，编辑如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">body &#123; </span><br><span class="line">	background-image: url(/images/background.png);</span><br><span class="line">	background-attachment: fixed; // 不随屏幕滚动而滚动</span><br><span class="line">	background-repeat: repeat; // 如果背景图不够屏幕大小则重复铺，改为no-repeat则表示不重复铺</span><br><span class="line">	background-size: contain; // 等比例铺满屏幕</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>将背景图命名为<strong>background.png</strong>并放入<code>主题根目录/images</code>下</p>
</li>
</ol>
<h2 id="动态可交互背景（js引入）"><a href="#动态可交互背景（js引入）" class="headerlink" title="动态可交互背景（js引入）"></a>动态可交互背景（js引入）</h2><ol>
<li>打开<code>博客根目录/themes/next/layout/_layout.swig</code>文件，在之前添加代码如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;</span><br><span class="line">color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<blockquote>
<p><strong>属性说明：</strong></p>
<ul>
<li><strong>color</strong> ：线条颜色, 默认: ‘0,0,0’；三个数字分别为(R,G,B)</li>
<li><strong>opacity</strong>: 线条透明度（0~1）, 默认: 0.5</li>
<li><strong>count</strong>: 线条的总数量, 默认: 150</li>
<li><strong>zIndex</strong>: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1</li>
</ul>
</blockquote>
<p>2.打开<code>博客根目录/themes/next/_config.yml</code>，找到字段<strong>canvas_nest</strong>，将其置为<strong>true</strong>【如果没有找到该字段，请自行添加】<br>3.hexo clean , hexo d -g可以看到效果~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　实现背景图更换及平铺，以及引入动态背景（可交互）&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="JavaScript" scheme="http://lemonxq.cn/tags/JavaScript/"/>
    
      <category term="CSS" scheme="http://lemonxq.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之使用CodingPages实现全站Https</title>
    <link href="http://lemonxq.cn/2017/11/20/Hexo%E4%B9%8B%E4%BD%BF%E7%94%A8CodingPages%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99Https/"/>
    <id>http://lemonxq.cn/2017/11/20/Hexo之使用CodingPages实现全站Https/</id>
    <published>2017-11-19T16:26:04.000Z</published>
    <updated>2018-09-25T02:04:21.717Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">拒绝让自己的网站成为不安全的网站：）</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　之前博客单线部署在Github Pages的时候，用的是cloudflare提供的SSL证书。但是cloudflare只能绑定一个CNAME记录（而且好像只能绑github.io？），所以后面双线部署（GitHub Pages+Coding Pages）后，cloudflare就不能用了。不过好在Coding Pages提供了通过Let’s Encrypt申请SSL证书进而开启全站HTTPs的方法。下面记录一下步骤~<br><a id="more"></a></p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>首先确保你的博客已经部署在Coding Pages上并且已经添加CNAME记录，不懂的先参照<a href="https://lemonxq.cn/2017/03/24/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA+%E4%B8%AA%E4%BA%BA%E5%AE%9A%E5%88%B6/">我的另一篇博客中关于域名绑定的部分</a> </li>
<li>申请SSL证书<br><strong>【注意：如果是Github+Coding双线部署，申请SSL证书前需要先将解析到github.io的CNAME记录暂停！！！不然Let’s Encrypt主机在验证域名所有权时会定位到Github Pages的主机上导致SSL证书申请失败】</strong><br><img src="http://okwl1c157.bkt.clouddn.com/ssl.png" alt=""></li>
<li>等待10分钟左右申请成功</li>
<li>强制开启Https<br><img src="http://okwl1c157.bkt.clouddn.com/https.png" alt=""></li>
</ol>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>开启强制HTTPS访问后，网站内引用资源的URL必须以https:// 开头，避免引用资源加载失败。例如Css文件、JavaScript文件、Image文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;拒绝让自己的网站成为不安全的网站：）&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　之前博客单线部署在Github Pages的时候，用的是cloudflare提供的SSL证书。但是cloudflare只能绑定一个CNAME记录（而且好像只能绑github.io？），所以后面双线部署（GitHub Pages+Coding Pages）后，cloudflare就不能用了。不过好在Coding Pages提供了通过Let’s Encrypt申请SSL证书进而开启全站HTTPs的方法。下面记录一下步骤~&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="Https" scheme="http://lemonxq.cn/tags/Https/"/>
    
      <category term="SSL" scheme="http://lemonxq.cn/tags/SSL/"/>
    
      <category term="Coding" scheme="http://lemonxq.cn/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之使用Livere评论代替多说评论</title>
    <link href="http://lemonxq.cn/2017/11/20/Hexo%E4%B9%8B%E4%BD%BF%E7%94%A8Livere%E8%AF%84%E8%AE%BA%E4%BB%A3%E6%9B%BF%E5%A4%9A%E8%AF%B4%E8%AF%84%E8%AE%BA/"/>
    <id>http://lemonxq.cn/2017/11/20/Hexo之使用Livere评论代替多说评论/</id>
    <published>2017-11-19T16:24:34.000Z</published>
    <updated>2018-09-25T02:04:21.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　由于众所周知的原因，多说评论和网易云跟帖先后都宣布关闭评论服务，一直没有找到好的替换方案。昨天无意看到韩国的Livere（来必力）评论，瞬间就喜欢上了~UI好看，加载时候的那个小幽灵也好可爱=w=而且是国外的，应该没那么容易关闭吧2333下面记录一下步骤~<br><a id="more"></a></p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol>
<li>去<a href="https://livere.com/" target="_blank" rel="noopener">Livere官网</a>注册Livere账号。</li>
<li>选择City版（免费），安装</li>
<li>进入管理页面-&gt;代码管理-&gt;一般网站，复制data-uid</li>
</ol>
<h2 id="在Hexo中添加Livere"><a href="#在Hexo中添加Livere" class="headerlink" title="在Hexo中添加Livere"></a>在Hexo中添加Livere</h2><p>以下基于主题Next，其他主题做法类似</p>
<ol>
<li>打开<code>博客根目录/themes/next/_config.yml</code></li>
<li><p>将# Third Party Services Settings 栏目下其他评论系统如duoshuo、gentie、youyan、disqus用#注释掉，加入以下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Livere评论系统</span><br><span class="line">livere_uid: 上一步中你获取的data-uid</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>博客根目录/themes/layout/_scripts/third-party/comments/</code>目录中新建txt文件，重命名为livere.swig，编辑内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id and not theme.gentie_productKey %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% if theme.livere_uid %&#125;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">      (function(d, s) &#123;</span><br><span class="line">        var j, e = d.getElementsByTagName(s)[0];</span><br><span class="line">        if (typeof LivereTower === &apos;function&apos;) &#123; return; &#125;</span><br><span class="line">        j = d.createElement(s);</span><br><span class="line">        j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;;</span><br><span class="line">        j.async = true;</span><br><span class="line">        e.parentNode.insertBefore(j, e);</span><br><span class="line">      &#125;)(document, &apos;script&apos;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>博客根目录/themes/layout/_scripts/third-party/comments.swig</code>文件中追加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;./comments/livere.swig&apos; %&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>博客根目录/themes/layout/_partials/comments.swig</code>文件中条件最后追加 LiveRe 插件是否引用的判断逻辑：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.livere_uid %&#125;</span><br><span class="line">      &lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;&#123;&#123; theme.livere_uid &#125;&#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>重新hexo clean、hexo d -g，然后就可以看到来必力评论啦~<br>【PS：不知道为啥我刚部署完的时候评论没有出现……可能要等一会？】</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　由于众所周知的原因，多说评论和网易云跟帖先后都宣布关闭评论服务，一直没有找到好的替换方案。昨天无意看到韩国的Livere（来必力）评论，瞬间就喜欢上了~UI好看，加载时候的那个小幽灵也好可爱=w=而且是国外的，应该没那么容易关闭吧2333下面记录一下步骤~&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="Livere" scheme="http://lemonxq.cn/tags/Livere/"/>
    
  </entry>
  
  <entry>
    <title>实现在Java中执行python代码或py脚本（可传参数）</title>
    <link href="http://lemonxq.cn/2017/11/17/%E5%AE%9E%E7%8E%B0%E5%9C%A8Java%E4%B8%AD%E6%89%A7%E8%A1%8Cpython%E4%BB%A3%E7%A0%81%E6%88%96py%E8%84%9A%E6%9C%AC%EF%BC%88%E5%8F%AF%E4%BC%A0%E5%8F%82%E6%95%B0%EF%BC%89/"/>
    <id>http://lemonxq.cn/2017/11/17/实现在Java中执行python代码或py脚本（可传参数）/</id>
    <published>2017-11-17T09:25:18.000Z</published>
    <updated>2018-09-25T02:04:21.721Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　最近用<strong>Java</strong>写服务端程序时，遇到这样一个需求：需要把<strong>用python写的机器学习算法</strong>部署到服务器上，然后Java执行<strong>py脚本</strong>，并且取得算法执行的结果。在网上找了很久，有些跑不通，有些是基于windows的，我的服务器是<strong>linux</strong>的，遇到了不少坑= =好不容易解决了，记录一下。</p>
<p><strong>注：Web服务器：Tomcat　服务器OS：CentOS 7　开发工具：Eclipse</strong><br><a id="more"></a></p>
<h2 id="直接嵌入python代码-使用PythonInterpreter"><a href="#直接嵌入python代码-使用PythonInterpreter" class="headerlink" title="直接嵌入python代码(使用PythonInterpreter)"></a>直接嵌入python代码(使用PythonInterpreter)</h2><ul>
<li><strong>适用情形：</strong>要嵌入的python代码不长</li>
<li><strong>步骤：</strong><ul>
<li>下载<strong>Jython</strong>，导入jython.jar到项目lib中</li>
<li>引用org.python包</li>
<li>测试代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.script.*;    </span><br><span class="line"><span class="keyword">import</span> org.python.util.PythonInterpreter;  </span><br><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span>  </span></span><br><span class="line"><span class="function"> </span>&#123;      </span><br><span class="line">  PythonInterpreter interpreter = <span class="keyword">new</span> PythonInterpreter();  </span><br><span class="line">  interpreter.exec(<span class="string">"print "</span>TEST<span class="string">";"</span>);  </span><br><span class="line"> &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="执行python脚本-使用PythonInterpreter"><a href="#执行python脚本-使用PythonInterpreter" class="headerlink" title="执行python脚本(使用PythonInterpreter)"></a>执行python脚本(使用PythonInterpreter)</h2><ul>
<li><strong>适用情形：</strong>python代码为py文件形式</li>
<li><strong>步骤：</strong><ul>
<li>下载Jython，导入jython.jar到项目lib中</li>
<li>引用org.python包</li>
<li>测试代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.script.*;    </span><br><span class="line"><span class="keyword">import</span> org.python.util.PythonInterpreter;  </span><br><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span>  </span></span><br><span class="line"><span class="function"> </span>&#123;      </span><br><span class="line">  PythonInterpreter interpreter = <span class="keyword">new</span> PythonInterpreter();  </span><br><span class="line">  InputStream filepy = <span class="keyword">new</span> FileInputStream(<span class="string">"D:\\demo.py"</span>);   </span><br><span class="line">  interpreter.execfile(filepy);   </span><br><span class="line">  filepy.close();  </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="执行python脚本-使用Runtime-getRuntime-）"><a href="#执行python脚本-使用Runtime-getRuntime-）" class="headerlink" title="执行python脚本(使用Runtime.getRuntime()）"></a>执行python脚本(使用Runtime.getRuntime()）</h2><ul>
<li><strong>适用情形：</strong><ul>
<li>python脚本中<strong>import了外来模块</strong>；</li>
<li>需要<strong>传入数据</strong>给python脚本</li>
<li><strong>PS:</strong>上面两种不知道为啥老是会报错= =所以最后我用的是这种……</li>
</ul>
</li>
<li><strong>测试代码：</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义传入参数</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="comment">// 接收python脚本的输出结果</span></span><br><span class="line"><span class="keyword">int</span> result;</span><br><span class="line"><span class="comment">// 若Python脚本在windows主机中</span></span><br><span class="line">String cmdStr_windows = <span class="string">"python D:\\demo.py"</span>+ <span class="string">" "</span> + age;</span><br><span class="line"><span class="comment">// 若Python脚本在Linux主机中</span></span><br><span class="line">String cmdStr_linux = <span class="string">"python /home/pythonCode/demo.py"</span>+ <span class="string">" "</span> + age);</span><br><span class="line"><span class="comment">// 定义缓冲区、正常结果输出流、错误信息输出流</span></span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];  </span><br><span class="line">ByteArrayOutputStream outStream = <span class="keyword">new</span> ByteArrayOutputStream();  </span><br><span class="line">ByteArrayOutputStream outerrStream = <span class="keyword">new</span> ByteArrayOutputStream();   </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	proc = Runtime.getRuntime().exec(cmdStr_linux);</span><br><span class="line">	InputStream errStream = proc.getErrorStream();</span><br><span class="line">	InputStream stream = proc.getInputStream();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 流读取与写入</span></span><br><span class="line">	<span class="keyword">int</span> len = -<span class="number">1</span>;  </span><br><span class="line">	<span class="keyword">while</span> ((len = errStream.read(buffer)) != -<span class="number">1</span>) &#123;  </span><br><span class="line">	    outerrStream.write(buffer, <span class="number">0</span>, len);  </span><br><span class="line">	&#125;  </span><br><span class="line">	<span class="keyword">while</span> ((len = stream.read(buffer)) != -<span class="number">1</span>) &#123;  </span><br><span class="line">	    outStream.write(buffer, <span class="number">0</span>, len);  </span><br><span class="line">	&#125;  </span><br><span class="line">	proc.waitFor();<span class="comment">// 等待命令执行完成</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 打印流信息</span></span><br><span class="line">	System.out.println(outStream.toString());</span><br><span class="line">	System.out.println(outerrStream.toString());</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 将接收的输出结果转换为目标类型</span></span><br><span class="line">	res = Integer.parseInt(outStream.toString());</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">	e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>demo.py脚本如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">age = sys.argv[<span class="number">1</span>]</span><br><span class="line">res = <span class="number">1111</span></span><br><span class="line"><span class="keyword">print</span> res</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>注：</strong></p>
<ul>
<li>若python脚本在Linux主机中，注意文件路径要为<strong>绝对路径</strong>，而且<strong>不能用~代替家目录！！！</strong>必须写成/XX/XXX的形式</li>
<li>若要传递多个参数，需要以<strong>空格</strong>间隔</li>
<li>接收python脚本执行结果可用<strong>java的InputStream</strong>截获控制台输出</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　最近用&lt;strong&gt;Java&lt;/strong&gt;写服务端程序时，遇到这样一个需求：需要把&lt;strong&gt;用python写的机器学习算法&lt;/strong&gt;部署到服务器上，然后Java执行&lt;strong&gt;py脚本&lt;/strong&gt;，并且取得算法执行的结果。在网上找了很久，有些跑不通，有些是基于windows的，我的服务器是&lt;strong&gt;linux&lt;/strong&gt;的，遇到了不少坑= =好不容易解决了，记录一下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：Web服务器：Tomcat　服务器OS：CentOS 7　开发工具：Eclipse&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="http://lemonxq.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="http://lemonxq.cn/tags/Java/"/>
    
      <category term="Python" scheme="http://lemonxq.cn/tags/Python/"/>
    
      <category term="Tomcat" scheme="http://lemonxq.cn/tags/Tomcat/"/>
    
      <category term="服务端编程" scheme="http://lemonxq.cn/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Windows下迁移指定MySQL数据库至Linux</title>
    <link href="http://lemonxq.cn/2017/11/14/Windows%E4%B8%8B%E8%BF%81%E7%A7%BB%E6%8C%87%E5%AE%9AMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%B3Linux/"/>
    <id>http://lemonxq.cn/2017/11/14/Windows下迁移指定MySQL数据库至Linux/</id>
    <published>2017-11-14T03:13:50.000Z</published>
    <updated>2018-09-25T02:04:21.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　最近有个项目，需要把部署在Windows下的mysql数据库迁移到linux服务器中，且只迁移该项目的数据库。记录一下步骤。</p>
<p><strong>注：</strong>本步骤基于<strong>cent os 7</strong>，使用的远程ssh工具为<strong>XShell5</strong>,数据库管理工具为<strong>Navicat for MySQL</strong>。迁移之前请确保两台主机已安装配置好MySQL数据库。<br><a id="more"></a></p>
<h2 id="使用sql脚本文件迁移"><a href="#使用sql脚本文件迁移" class="headerlink" title="使用sql脚本文件迁移"></a>使用sql脚本文件迁移</h2><h3 id="Windows（迁出数据库主机）"><a href="#Windows（迁出数据库主机）" class="headerlink" title="Windows（迁出数据库主机）"></a>Windows（迁出数据库主机）</h3><ol>
<li>打开Navicat，在项目所在数据库处，<strong>右键-&gt;转储SQL文件</strong><br><img src="http://okwl1c157.bkt.clouddn.com/sql_transfer1.png" alt=""></li>
<li>导出sql文件成功<br><img src="http://okwl1c157.bkt.clouddn.com/sql_transfer2.png" alt=""></li>
</ol>
<h3 id="Linux（迁入数据库主机）"><a href="#Linux（迁入数据库主机）" class="headerlink" title="Linux（迁入数据库主机）"></a>Linux（迁入数据库主机）</h3><ol>
<li>打开XShell， <strong>ssh</strong>连接Linux主机（CentOS7）</li>
<li>将windows下导出的sql文件上传至Linux主机中，这里以<strong>XShell</strong>提供的<strong>ZMODEM</strong>文件传输工具为例。<ul>
<li><code>yum install lrzsz</code> 下载远程上传下载工具</li>
<li><code>cd 指定文件夹</code></li>
<li><code>rz</code>上传导出的sql文件（若<strong>上传失败</strong>请使用<code>rz -E</code>命令）</li>
</ul>
</li>
<li>执行sql脚本文件<ul>
<li><code>mysql -u root -p</code> 输入密码后进入mysql命令行</li>
<li><code>create database 项目数据库名;</code></li>
<li><code>use 项目数据库名;</code></li>
<li><code>source 路径/XXX.sql</code></li>
<li>执行成功，<code>show tables;</code>可以看到已经导入的表</li>
</ul>
</li>
</ol>
<h2 id="使用mysqldump命令迁移"><a href="#使用mysqldump命令迁移" class="headerlink" title="使用mysqldump命令迁移"></a>使用mysqldump命令迁移</h2><h3 id="Windows（迁出数据库主机）-1"><a href="#Windows（迁出数据库主机）-1" class="headerlink" title="Windows（迁出数据库主机）"></a>Windows（迁出数据库主机）</h3><ol>
<li>打开cmd，执行mysqldump命令导出dump文件<ul>
<li><code>mysqldump -u root -p test &gt; test.dump</code> </li>
<li>回车后输入密码</li>
</ul>
</li>
<li>导出dump文件成功(包括建表及插入语句等)</li>
</ol>
<h3 id="Linux（迁入数据库主机）-1"><a href="#Linux（迁入数据库主机）-1" class="headerlink" title="Linux（迁入数据库主机）"></a>Linux（迁入数据库主机）</h3><ol>
<li>打开XShell， <strong>ssh</strong>连接Linux主机（CentOS7）</li>
<li>将windows下导出的dump文件上传至Linux主机中，步骤同上</li>
<li>从备份的dump文件恢复数据库<ul>
<li><code>mysql test &lt; test.dump</code></li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　最近有个项目，需要把部署在Windows下的mysql数据库迁移到linux服务器中，且只迁移该项目的数据库。记录一下步骤。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;本步骤基于&lt;strong&gt;cent os 7&lt;/strong&gt;，使用的远程ssh工具为&lt;strong&gt;XShell5&lt;/strong&gt;,数据库管理工具为&lt;strong&gt;Navicat for MySQL&lt;/strong&gt;。迁移之前请确保两台主机已安装配置好MySQL数据库。&lt;br&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://lemonxq.cn/categories/MySQL/"/>
    
    
      <category term="Linux" scheme="http://lemonxq.cn/tags/Linux/"/>
    
      <category term="CentOS7" scheme="http://lemonxq.cn/tags/CentOS7/"/>
    
      <category term="MySQL" scheme="http://lemonxq.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Unity对象池技术（原理+实战）</title>
    <link href="http://lemonxq.cn/2017/08/13/Unity%E5%AF%B9%E8%B1%A1%E6%B1%A0%E6%8A%80%E6%9C%AF%EF%BC%88%E5%8E%9F%E7%90%86-%E5%AE%9E%E6%88%98%EF%BC%89/"/>
    <id>http://lemonxq.cn/2017/08/13/Unity对象池技术（原理-实战）/</id>
    <published>2017-08-13T05:30:19.000Z</published>
    <updated>2018-09-25T02:04:21.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　很早就听说过对象池技术……然而一直到这几天才真正去了解= =。还得感谢Jasper Flick的博客，这里推荐他的<a href="http://catlikecoding.com/unity/tutorials/" target="_blank" rel="noopener">Unity C# Tutorials系列</a>，目前我只看了前几篇，收获还是挺大的~本篇博客也是基于这个系列中的一篇——<a href="http://catlikecoding.com/unity/tutorials/object-pools/" target="_blank" rel="noopener">Object Pools</a>，加上个人的一些理解，对Unity的对象池技术进行简单介绍。<br><a id="more"></a></p>
<h2 id="对象池简介"><a href="#对象池简介" class="headerlink" title="对象池简介"></a>对象池简介</h2><p>　　顾名思义，对象池是存放对象的<strong>缓冲区</strong>。用户可以从缓冲区中<strong>放入/取出</strong>对象。一类对象池存放一类特定的对象。那么对象池有什么用呢？在游戏中，经常会有<strong>产生/销毁</strong>大量<strong>同类</strong>游戏对象的需求，比如游戏中源源不断的敌人、频繁刷新的宝箱、乃至一些游戏特效（风、雨等）。如果没有一种比较好的机制来管理这些对象的产生和销毁，而是一昧的Instantiate和Destroy，将使你的<strong>游戏性能</strong>大大下降，甚至出现卡死、崩溃……</p>
<h2 id="对象池实现"><a href="#对象池实现" class="headerlink" title="对象池实现"></a>对象池实现</h2><p>　　简而言之，就是当需要使用一个对象的时候，直接从该类对象的对象池中取出（<strong>SetActive(true)</strong>），如果对象池中无可用对象，再进行Instantitate。而当不再需要该对象时，不直接进行Destroy,而是<strong>SetActive(false)</strong>并将其回收到对象池中。下面直接贴下代码：</p>
<h3 id="PooledObject-cs"><a href="#PooledObject-cs" class="headerlink" title="PooledObject.cs"></a>PooledObject.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 所有需要使用对象池机制的对象的基类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PooledObject</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 归属的池</span></span><br><span class="line">    <span class="keyword">public</span> ObjectPool Pool &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 场景中某个具体的池（不可序列化）</span></span><br><span class="line">    [System.NonSerialized]</span><br><span class="line">    <span class="keyword">private</span> ObjectPool poolInstanceForPrefab;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 回收对象到对象池中</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReturnToPool</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Pool)</span><br><span class="line">        &#123;</span><br><span class="line">            Pool.AddObject(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 返回对象池中可用对象的实例</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> T GetPooledInstance&lt;T&gt;() <span class="keyword">where</span> T : PooledObject</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!poolInstanceForPrefab)</span><br><span class="line">        &#123;</span><br><span class="line">            poolInstanceForPrefab = ObjectPool.GetPool(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (T)poolInstanceForPrefab.GetObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="ObjectPool-cs"><a href="#ObjectPool-cs" class="headerlink" title="ObjectPool.cs"></a>ObjectPool.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ObjectPool</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 池中对象prefab</span></span><br><span class="line">    <span class="keyword">private</span> PooledObject prefab;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存储可用对象的缓冲区</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;PooledObject&gt; availableObjects = <span class="keyword">new</span> List&lt;PooledObject&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 从池中取出对象，返回该对象</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PooledObject <span class="title">GetObject</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        PooledObject obj;</span><br><span class="line">        <span class="keyword">int</span> lastAvailableIndex = availableObjects.Count - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (lastAvailableIndex &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            obj = availableObjects[lastAvailableIndex];</span><br><span class="line">            availableObjects.RemoveAt(lastAvailableIndex);</span><br><span class="line">            obj.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">// 池中无可用obj</span></span><br><span class="line">        &#123;</span><br><span class="line">            obj = Instantiate&lt;PooledObject&gt;(prefab);</span><br><span class="line">            obj.transform.SetParent(transform, <span class="literal">false</span>);</span><br><span class="line">            obj.Pool = <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 向池中放入obj</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddObject</span>(<span class="params">PooledObject obj</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        obj.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        availableObjects.Add(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 【静态方法】创建并返回对象所属的对象池</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ObjectPool <span class="title">GetPool</span>(<span class="params">PooledObject prefab</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        GameObject obj;</span><br><span class="line">        ObjectPool pool;</span><br><span class="line">        <span class="comment">// 编辑器模式下检查是否有同名pool存在，防止重复创建pool</span></span><br><span class="line">        <span class="keyword">if</span> (Application.isEditor)</span><br><span class="line">        &#123;</span><br><span class="line">            obj = GameObject.Find(prefab.name + <span class="string">" Pool"</span>);</span><br><span class="line">            <span class="keyword">if</span> (obj)</span><br><span class="line">            &#123;</span><br><span class="line">                pool = obj.GetComponent&lt;ObjectPool&gt;();</span><br><span class="line">                <span class="keyword">if</span> (pool)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> pool;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        obj = <span class="keyword">new</span> GameObject(prefab.name + <span class="string">" Pool"</span>);</span><br><span class="line">        DontDestroyOnLoad(obj);</span><br><span class="line">        pool = obj.AddComponent&lt;ObjectPool&gt;();</span><br><span class="line">        pool.prefab = prefab;</span><br><span class="line">        <span class="keyword">return</span> pool;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实战：七彩喷泉"><a href="#实战：七彩喷泉" class="headerlink" title="实战：七彩喷泉"></a>实战：七彩喷泉</h2><p>【注：以下译至前面提到的<a href="http://catlikecoding.com/unity/tutorials/object-pools/" target="_blank" rel="noopener">Object Pools</a>一文，有部分删减】</p>
<h3 id="1-实现效果："><a href="#1-实现效果：" class="headerlink" title="1.实现效果："></a>1.实现效果：</h3><embed type="video/mp4" allowscriptaccess="always" allowfullscreen="true" wmode="transparent" quality="high" height="300" width="480" src="https://fat.gfycat.com/QueasyPessimisticDugong.mp4">

<h3 id="2-生成大量物体"><a href="#2-生成大量物体" class="headerlink" title="2.生成大量物体"></a>2.生成大量物体</h3><ul>
<li>首先新建脚本Stuff.cs，代码如下：<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line">[RequireComponent(<span class="keyword">typeof</span>(Rigidbody))]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Stuff</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">	Rigidbody body;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Awake</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		body = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>创建Cube和Sphere，挂上Stuff脚本。并将它们做成Prefab</li>
<li>接下来需要创建StuffSpawner（孵化器），并挂上StuffSpawner脚本，代码如下：<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StuffSpawner</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">float</span> timeBetweenSpawns;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> Stuff[] stuffPrefabs;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> timeSinceLastSpawn;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">FixedUpdate</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		timeSinceLastSpawn += Time.deltaTime;</span><br><span class="line">		<span class="keyword">if</span> (timeSinceLastSpawn &gt;= timeBetweenSpawns) &#123;</span><br><span class="line">			timeSinceLastSpawn -= timeBetweenSpawns;</span><br><span class="line">			SpawnStuff();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</span><br><span class="line">		Stuff spawn = Instantiate&lt;Stuff&gt;(prefab);</span><br><span class="line">		spawn.transform.localPosition = transform.position;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/spawning-lots-of-stuff/spawner.png" alt=""></li>
<li>现在我们有了孵化器，可以在一个点产生Cube和Sphere，但这还不够。我们可以给这些stuff一个初始速度及方向。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> velocity;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</span><br><span class="line">	Stuff spawn = Instantiate&lt;Stuff&gt;(prefab);</span><br><span class="line">	spawn.transform.localPosition = transform.position;</span><br><span class="line">	spawn.Body.velocity = transform.up * velocity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>运行一下可以发现一个个物体上升又下降，周而复始。如果你倾斜一下孵化器，会让它看上去更像流动的物体。事实上，如果我们把多个孵化器分布在一个环上，将得到类似喷泉的效果。因此，新建一个空物体StuffSpawnerRing，挂上如下脚本：<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StuffSpawnerRing</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> numberOfSpawners;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">float</span> radius, tiltAngle;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> StuffSpawner spawnerPrefab;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Awake</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numberOfSpawners; i++) &#123;</span><br><span class="line">			CreateSpawner(i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">CreateSpawner</span> (<span class="params"><span class="keyword">int</span> index</span>) </span>&#123;</span><br><span class="line">		Transform rotater = <span class="keyword">new</span> GameObject(<span class="string">"Rotater"</span>).transform;</span><br><span class="line">		rotater.SetParent(transform, <span class="literal">false</span>);</span><br><span class="line">		rotater.localRotation =</span><br><span class="line">			Quaternion.Euler(<span class="number">0</span>f, index * <span class="number">360</span>f / numberOfSpawners, <span class="number">0</span>f);</span><br><span class="line"></span><br><span class="line">		StuffSpawner spawner = Instantiate&lt;StuffSpawner&gt;(spawnerPrefab);</span><br><span class="line">		spawner.transform.SetParent(rotater, <span class="literal">false</span>);</span><br><span class="line">		spawner.transform.localPosition = <span class="keyword">new</span> Vector3(<span class="number">0</span>f, <span class="number">0</span>f, radius);</span><br><span class="line">		spawner.transform.localRotation = Quaternion.Euler(tiltAngle, <span class="number">0</span>f, <span class="number">0</span>f);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></li>
<li>现在将场景中的Spawner做成prefab并删除，调整SpawnerRing的参数<br><img src="http://catlikecoding.com/unity/tutorials/object-pools/spawning-lots-of-stuff/ring.png" alt=""><h3 id="3-添加销毁区（KillZone）"><a href="#3-添加销毁区（KillZone）" class="headerlink" title="3.添加销毁区（KillZone）"></a>3.添加销毁区（KillZone）</h3></li>
<li>我们现在得到了无止尽生成的下落的物体。为了防止程序卡顿，我们需要引入销毁区。所有进入销毁区的物体都要被销毁。</li>
<li>创建一个带有Box Collider的物体，设置为触发器，为Collider设置一个非常大的size（如1000），并将其放置在喷泉下方某个位置。最后给该物体添加一个Tag以便能被正确识别<br><img src="http://catlikecoding.com/unity/tutorials/object-pools/spawning-lots-of-stuff/kill-zone.png" alt=""></li>
<li>重新编辑Stuff.cs，添加触发器事件处理<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span> (<span class="params">Collider enteredCollider</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (enteredCollider.CompareTag(<span class="string">"Kill Zone"</span>)) &#123;</span><br><span class="line">		Destroy(gameObject);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-加入可变因素"><a href="#4-加入可变因素" class="headerlink" title="4.加入可变因素"></a>4.加入可变因素</h3><ul>
<li>目前我们的喷泉缺少随机性，我们可以用随机值代替固定值。因为我们要处理多个数据，所以让我们创建一个结构体来更好地实现随机化。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line">[System.Serializable]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> FloatRange &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">float</span> min, max;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">float</span> RandomInRange &#123;</span><br><span class="line">		<span class="keyword">get</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> Random.Range(min, max);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><strong>随机化生成时间</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> FloatRange timeBetweenSpawns;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> currentSpawnDelay;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FixedUpdate</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	timeSinceLastSpawn += Time.deltaTime;</span><br><span class="line">	<span class="keyword">if</span> (timeSinceLastSpawn &gt;= currentSpawnDelay) &#123;</span><br><span class="line">		timeSinceLastSpawn -= currentSpawnDelay;</span><br><span class="line">		currentSpawnDelay = timeBetweenSpawns.RandomInRange;</span><br><span class="line">		SpawnStuff();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/spawn-time-range.png" alt=""></li>
<li><strong>随机化物体scale和rotation</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> FloatRange timeBetweenSpawns, scale;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</span><br><span class="line">	Stuff spawn = Instantiate&lt;Stuff&gt;(prefab);</span><br><span class="line">	</span><br><span class="line">	spawn.transform.localPosition = transform.position;</span><br><span class="line">	spawn.transform.localScale = Vector3.one * scale.RandomInRange;</span><br><span class="line">	spawn.transform.localRotation = Random.rotation;</span><br><span class="line">	</span><br><span class="line">	spawn.Body.velocity = transform.up * velocity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/scale-range.png" alt=""></li>
<li><strong>随机化物体速度大小</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> FloatRange timeBetweenSpawns, scale, randomVelocity;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	…</span><br><span class="line">	</span><br><span class="line">	spawn.Body.velocity = transform.up * velocity +</span><br><span class="line">		Random.onUnitSphere * randomVelocity.RandomInRange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/random-velocity-range.png" alt=""></li>
<li><strong>随机化物体角速度</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	…</span><br><span class="line"></span><br><span class="line">	spawn.Body.velocity = transform.up * velocity +</span><br><span class="line">		Random.onUnitSphere * randomVelocity.RandomInRange;</span><br><span class="line">	spawn.Body.angularVelocity =</span><br><span class="line">		Random.onUnitSphere * angularVelocity.RandomInRange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/angular-velocity-range.png" alt=""></li>
<li><strong>随机化材质（实现七彩）</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Material[] stuffMaterials;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateSpawner</span> (<span class="params"><span class="keyword">int</span> index</span>) </span>&#123;</span><br><span class="line">	…</span><br><span class="line"></span><br><span class="line">	spawner.stuffMaterial = stuffMaterials[index % stuffMaterials.Length];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/ring-materials.png" alt=""></li>
</ul>
<h3 id="5-应用对象池进行管理"><a href="#5-应用对象池进行管理" class="headerlink" title="5.应用对象池进行管理"></a>5.应用对象池进行管理</h3><ul>
<li>让Stuff继承PooledObject(PooledObject代码见前)，修改触发器事件，进入销毁区时不Destroy，而是调用ReturnToPool方法。</li>
<li>接下来，我们需要改变StuffSpawner来让它使用对象池来创建对象，而不是直接Instanstiate。如何做到呢？某种程度上我们需要拥有每个prefab的池，但我们不想要重复的池，也就是说所有孵化器都共享他们。当然，如果我们能直接从一个prefab得到一个池化的实例而不用考虑那些池本身将更加方便。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</span><br><span class="line">	Stuff spawn = prefab.GetPooledInstance&lt;Stuff&gt;();</span><br><span class="line"></span><br><span class="line">	…</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>并非<strong>所有的</strong>对象都适合使用对象池来管理。需要在“<strong>对象生成的开销</strong>”以及“<strong>维护对象池的开销</strong>”之间进行权衡。</li>
<li>为避免在场景切换时重新生成pool，从而带来性能损耗，可在代码中加入<strong>DontDestroyOnLoad(pool)</strong></li>
<li>同样，在场景切换时，应该将原场景中的对象回收进相应对象池中。即在<strong>OnLevelWasLoaded</strong>方法中调用<strong>ReturnToPool</strong>方法</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　很早就听说过对象池技术……然而一直到这几天才真正去了解= =。还得感谢Jasper Flick的博客，这里推荐他的&lt;a href=&quot;http://catlikecoding.com/unity/tutorials/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Unity C# Tutorials系列&lt;/a&gt;，目前我只看了前几篇，收获还是挺大的~本篇博客也是基于这个系列中的一篇——&lt;a href=&quot;http://catlikecoding.com/unity/tutorials/object-pools/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Object Pools&lt;/a&gt;，加上个人的一些理解，对Unity的对象池技术进行简单介绍。&lt;br&gt;
    
    </summary>
    
      <category term="Unity" scheme="http://lemonxq.cn/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://lemonxq.cn/tags/Unity/"/>
    
      <category term="对象池" scheme="http://lemonxq.cn/tags/%E5%AF%B9%E8%B1%A1%E6%B1%A0/"/>
    
      <category term="翻译" scheme="http://lemonxq.cn/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>ulua热更新小试</title>
    <link href="http://lemonxq.cn/2017/05/01/ulua%E7%83%AD%E6%9B%B4%E6%96%B0%E5%B0%8F%E8%AF%95/"/>
    <id>http://lemonxq.cn/2017/05/01/ulua热更新小试/</id>
    <published>2017-05-01T14:50:09.000Z</published>
    <updated>2018-09-25T02:04:21.720Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">传说中的热更新在Unity中是怎样实现的:)</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　热更新技术在游戏行业可以说是大名鼎鼎了，虽然苹果前段时间禁止了JSPatch等热更新技术，但目前来看，苹果并没有禁止游戏引擎的热更新技术。某种程度上说明了热更新在游戏中的重要性。而ulua作为一款优秀的unity3d热更新插件，完美解决了Unity游戏热更新的问题。<br><a id="more"></a></p>
<h2 id="什么是热更新"><a href="#什么是热更新" class="headerlink" title="什么是热更新"></a>什么是热更新</h2><p>　　热更新一般用于网络游戏中。其指的是在不重新下载客户端的情况下，对游戏的内容进行更新（包括资源更新或逻辑更新等）。知乎上对热更新有一个很形象的比喻：假设你的卡车开到了150KM/H，然后有个轮胎爆了。司机说，你就直接换吧，我不停车。你小心点换。热更新机制大概就是这个意思。</p>
<h2 id="什么是Lua"><a href="#什么是Lua" class="headerlink" title="什么是Lua"></a>什么是Lua</h2><p>　　Lua是一款<strong>轻巧</strong>的脚本语言，由<strong>标准C</strong>编写而成，代码简洁优美，几乎在所有操作系统和平台上都可以编译，运行。在目前所有脚本引擎中，Lua的<strong>速度是最快</strong>的。这一切都决定了Lua是作为<strong>嵌入式脚本</strong>的最佳选择。（嗯这段其实是百度的orz…）</p>
<p>　　Lua代码都是运行时才编译的，不运行的时候就如同一张图片、一段音频一样，都是文件；所以更新逻辑只需要更新脚本，不需要再编译，因而Lua能轻松实现“热更新”。Ulua是一款非常实用的unity插件，它能让unity支持Lua语言，而且运行效率还不错。</p>
<h2 id="使用ulua进行热更新"><a href="#使用ulua进行热更新" class="headerlink" title="使用ulua进行热更新"></a>使用ulua进行热更新</h2><h3 id="1-安装ulua插件-及-Lua编写工具LuaStudio"><a href="#1-安装ulua插件-及-Lua编写工具LuaStudio" class="headerlink" title="1.安装ulua插件 及 Lua编写工具LuaStudio"></a>1.安装ulua插件 及 Lua编写工具LuaStudio</h3><ul>
<li>ulua下载地址：<a href="http://ulua.org/" target="_blank" rel="noopener">http://ulua.org/</a></li>
<li>LuaStudio下载地址：<a href="https://pan.baidu.com/s/1hsabx0w" target="_blank" rel="noopener">https://pan.baidu.com/s/1hsabx0w</a> 密码: kqvp</li>
</ul>
<h3 id="2-新建Unity工程，将ulua导入工程中"><a href="#2-新建Unity工程，将ulua导入工程中" class="headerlink" title="2.新建Unity工程，将ulua导入工程中"></a>2.新建Unity工程，将ulua导入工程中</h3><h3 id="3-ulua中的使用流程"><a href="#3-ulua中的使用流程" class="headerlink" title="3.ulua中的使用流程"></a>3.ulua中的使用流程</h3><ul>
<li>实例化LuaState对象（new LuaState()）,一个LuaState对象代表一个Lua解释器</li>
<li>加载Lua代码（LuaState.DoString(string)），string为Lua代码字符串或Lua脚本文件名称<strong>（推荐使用后者）</strong></li>
<li>调用Lua代码中的方法（GetFunction string）,LuaFunction.callFunction(string)</li>
<li><strong>注：</strong>由于Unity不支持扩展名为lua的文件，所以可将Lua脚本扩展名定为txt（纯文本文件）,并用unity的<strong>TextAsset</strong>列表负责记录所有脚本文件。建议列表中给每个脚本搭配一个string类型的ID，这样凭此ID即可加载正确的lua脚本；另外在LuaState类中新增一个String类型的public成员，赋值为该ID。这样一旦某个Lua脚本在运行时报错，可根据输出的ID值判断是哪个Lua脚本有错误。</li>
</ul>
<h3 id="4-ulua框架在Unity中的使用（SimpleFramework-UGUI解读）"><a href="#4-ulua框架在Unity中的使用（SimpleFramework-UGUI解读）" class="headerlink" title="4.ulua框架在Unity中的使用（SimpleFramework_UGUI解读）"></a>4.ulua框架在Unity中的使用（SimpleFramework_UGUI解读）</h3><ul>
<li><strong>框架启动</strong><ul>
<li>GlobalGenerator:初始化游戏环境,包括添加AppView,启动<strong>pureMVC</strong>框架，添加各种Manager</li>
<li>GameManager中对资源进行更新处理</li>
</ul>
</li>
<li><strong>资源初始化过程 </strong>OnResourceInited<ul>
<li>加载网络、游戏管理器的Lua脚本</li>
<li>调用GameManager.lua里的LuaScriptPanel方法（CallMethod通过LuaScriptMgr.cs的CallLuaFunction()将控制权移交给GameManager.lua）</li>
<li>创建Lua面板（Message、Prompt）</li>
<li>调用方法OnInitOK表示初始化成功</li>
</ul>
</li>
<li>ulua框架的执行顺序：<ul>
<li>每个UI Panel对应<strong>View</strong>下的lua代码，用来获取一些需要交互的属性</li>
<li>每个UIprefab通过<strong>Controller</strong>进行控制，包括其实例化以及组件的一些行为，比如OnCreate事件</li>
</ul>
</li>
</ul>
<h2 id="热更新案例：UI面板更新"><a href="#热更新案例：UI面板更新" class="headerlink" title="热更新案例：UI面板更新"></a>热更新案例：UI面板更新</h2><h3 id="创建开发UI界面"><a href="#创建开发UI界面" class="headerlink" title="创建开发UI界面"></a>创建开发UI界面</h3><ul>
<li>设计UI Panel<br><img src="http://okwl1c157.bkt.clouddn.com/panelDemo" alt=""></li>
<li>将UI panel做成prefab,进行<strong>打包</strong>（注意<strong>后缀一定为.assetbundle</strong>）</li>
<li>将UI panel所用到的所有UI资源进行打包（图片、字体等），最好分类打包</li>
<li>点击<strong>Game-Build XXX Resources</strong>(XXX 代表想要发布到的平台)</li>
<li>创建<strong>Global Generator</strong>（空Object上挂Global Generator脚本）</li>
<li>重写Logic文件夹中的<strong>GameManager.lua</strong>脚本<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span> <span class="string">"Common/define"</span> <span class="comment">--引入AppConst,NetManager的定义</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">"Controller/BottomCtrl"</span> <span class="comment">--以下引入对各子面板的控制器</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">"Controller/SettingsCtrl"</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">"Controller/DialogCtrl"</span></span><br><span class="line"></span><br><span class="line">GameManager = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GameManager.LuaScriptPanel</span><span class="params">()</span></span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">'Bottom'</span>,<span class="string">'Settings'</span>,<span class="string">'Dialog'</span>; <span class="comment">--Prefab中除掉“Panel”后的名字</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GameManager.OnInitOK</span><span class="params">()</span></span></span><br><span class="line">	<span class="comment">--加载网络</span></span><br><span class="line">	AppConst.SocketPort = <span class="number">2012</span>; <span class="comment">--设置套接字端口号</span></span><br><span class="line">    AppConst.SocketAddress = <span class="string">"127.0.0.1"</span>; <span class="comment">--设置套接字IP地址，这里默认从主机下载资源</span></span><br><span class="line">    NetManager:SendConnect(); <span class="comment">--建立连接</span></span><br><span class="line">	</span><br><span class="line">	BottomCtrl.Awake();</span><br><span class="line">	SettingsCtrl.Awake();</span><br><span class="line">	DialogCtrl.Awake();</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li>
<li>View文件夹下<strong>创建子面板的lua脚本</strong>（以BottomPanel.lua为例，其他同理）<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">BottomPanel = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> this = BottomPanel</span><br><span class="line"><span class="keyword">local</span> gameObject</span><br><span class="line"><span class="keyword">local</span> transform</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomPanel.Awake</span><span class="params">(obj)</span></span></span><br><span class="line">	<span class="comment">--对局部变量进行赋值</span></span><br><span class="line">	gameObject = obj;</span><br><span class="line">	transform = gameObject.transform</span><br><span class="line">	</span><br><span class="line">	this.InitPanel();<span class="comment">--初始化面板</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomPanel.InitPanel</span><span class="params">()</span></span></span><br><span class="line">	<span class="comment">--给面板中的三个Button赋值</span></span><br><span class="line">	this.buttonSettings = transform:FindChild(<span class="string">"ButtonSetting"</span>).gameObject;</span><br><span class="line">	this.buttonPeople = transform:FindChild(<span class="string">"ButtonPeople"</span>).gameObject;</span><br><span class="line">	this.buttonDialog = transform:FindChild(<span class="string">"ButtonDialog"</span>).gameObject;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li>
<li><strong>[可选]</strong>给SettingPanel下的BG添加动画：由小变大动画、隐藏动画、激活动画</li>
<li>重写SettingPanel.lua脚本获取UI中的组件<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SettingsPanel = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> this = SettingsPanel</span><br><span class="line"><span class="keyword">local</span> transform</span><br><span class="line"><span class="keyword">local</span> gameObject</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SettingsPanel.Awake</span><span class="params">(obj)</span></span></span><br><span class="line">	gameObject = obj;</span><br><span class="line">	transform = gameObject.transform;</span><br><span class="line">	</span><br><span class="line">    this.InitPanel();</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SettingsPanel.InitPanel</span><span class="params">()</span></span></span><br><span class="line">	<span class="comment">--获取动画组件及按钮组件</span></span><br><span class="line">	this.anim = transform:FindChild(<span class="string">"Bg"</span>):GetComponent(<span class="string">"Animator"</span>);</span><br><span class="line">	this.buttonClose = transform:FindChild(<span class="string">"Bg/ButtonClose"</span>).gameObject;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li>
<li>开发Controller控制层下的Lua代码，控制UI控件的产生和事件的监听（以BottomCtrl.lua为例）<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span> <span class="string">"Common/define"</span></span><br><span class="line"></span><br><span class="line">BottomCtrl = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> this = BottomCtrl</span><br><span class="line"><span class="keyword">local</span> gameObject</span><br><span class="line"><span class="keyword">local</span> transform</span><br><span class="line"><span class="keyword">local</span> lua</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.New</span><span class="params">()</span></span></span><br><span class="line">	<span class="keyword">return</span> this;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.Awake</span><span class="params">()</span></span></span><br><span class="line">	<span class="comment">--调用panel的创建方法创建相应面板，注意面板命名为XXPanel</span></span><br><span class="line">	PanelManager:CreatePanel(<span class="string">"Bottom"</span>,this.OnCreate)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnCreate</span><span class="params">(obj)</span></span></span><br><span class="line">	gameObject = obj;</span><br><span class="line">	transform = obj.transform</span><br><span class="line">	</span><br><span class="line">	lua = gameObject:GetComponent(<span class="string">"LuaBehaviour"</span>);</span><br><span class="line">	<span class="comment">--注册按钮，绑定事件</span></span><br><span class="line">	lua:AddClick(BottomPanel.buttonDialog,this.OnButtonDialogClick);</span><br><span class="line">	lua:AddClick(BottomPanel.buttonPeople,this.OnButtonPeopleClick);</span><br><span class="line">	lua:AddClick(BottomPanel.buttonSettings,this.OnButtonSettingsClick);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnButtonDialogClick</span><span class="params">()</span></span></span><br><span class="line">	DialogCtrl.Show();</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnButtonPeopleClick</span><span class="params">()</span></span></span><br><span class="line">	</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnButtonSettingsClick</span><span class="params">()</span></span></span><br><span class="line">	SettingsCtrl.Show();</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li>
<li>发布到手机上，启动Server<ul>
<li>Switch Platform - Android</li>
<li>Lua-Clear Wrap Files</li>
<li>Lua-Gen Wrap Files</li>
<li>Game-Build Android Resources</li>
<li>修改AppConst.cs里的UpdateMode=true,DebugMode=false,WebUrl=局域网地址（有服务器的话就是服务器地址,这里假设用uLua自带服务器运行）</li>
<li>打开Server.sln-HttpServer.cs，修改host,重新生成工程</li>
<li>运行ulua文件夹下Server/Server/bin/Debug/SuperSocket.SocketService.exe（以管理员权限运行），选择r运行服务器</li>
</ul>
</li>
<li>进行Lua代码的更新<ul>
<li>Build &amp; run,手机连电脑，将程序发布到手机</li>
<li>更改Lua代码</li>
<li>重新Build Android Resources</li>
<li>手机重新启动该程序</li>
<li>解包完成！更新完成！</li>
</ul>
</li>
<li>进行UI资源的更新<ul>
<li>创建Dialog Panel,打包，新建Panel,Ctrl脚本文件</li>
<li>重新Build Android Resources</li>
<li>手机重新启动软件<br><strong>注意：</strong>如果电脑防火墙没关，手机是没有权限访问电脑的，就会更新失败。。。</li>
</ul>
</li>
</ul>
<h2 id="Unity3D中的热更新"><a href="#Unity3D中的热更新" class="headerlink" title="Unity3D中的热更新"></a>Unity3D中的热更新</h2><p>Unity3D的热更新会涉及3个目录。</p>
<ul>
<li><p><strong>游戏资源目录：</strong>里面包含Unity3D工程中StreamingAssets文件夹下的文件。安装游戏之后，这些文件将会被一字不差地复制到目标机器上的特定文件夹里，不同平台的文件夹不同，如下所示</p>
<ul>
<li>Mac OS或Windows：Application.dataPath “/StreamingAssets”;</li>
<li>IOS： Application.dataPath “/Raw”;</li>
<li>Android：jar:file://“ Application.dataPath “!/assets/“; </li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>数据目录：</strong>由于“游戏资源目录”在Android和IOS上是只读的，不能把网上的下载的资源放到里面，所以需要建立一个“数据目录”，该目录可读可写。第一次开启游戏后，程序将“游戏资源目录”的内容复制到“数据目录中”（这个步骤只会执行一次，下次再打开游戏就不复制了）。游戏过程中的资源加载，都是从“数据目录”中获取、解包。不同平台下，“数据目录”的地址也不同，LuaFramework的定义如下：</p>
<ul>
<li>Android或IOS：Application.persistentDataPath “/LuaFramework”</li>
<li>Mac OS或Windows：c:/LuaFramework/</li>
<li>调试模式下：Application.dataPath “/StreamingAssets/“ </li>
</ul>
</li>
</ul>
<p>　　<strong>注：</strong>”LuaFramework”和”StreamingAssets”由配置决定，这里取默认值</p>
<ul>
<li><strong>网络资源地址：</strong>存放游戏资源的网址，游戏开启后，程序会从网络资源地址下载一些更新的文件到数据目录。</li>
</ul>
<p>这些目录包含着不同版本的资源文件，以及用于版本控制的<strong>files.txt。</strong>Files.txt里面存放着资源文件的名称和md5码。程序会<strong>先下载“网络资源地址”上的files.txt</strong>，然后与“数据目录”中文件的<strong>md5码</strong>做比较，更新有变化的文件。</p>
<h2 id="常见问题-amp-amp-注意事项"><a href="#常见问题-amp-amp-注意事项" class="headerlink" title="常见问题 &amp;&amp; 注意事项"></a>常见问题 &amp;&amp; 注意事项</h2><ol>
<li>运行 LuaStudio 时，请使用Administrator管理员权限！</li>
<li>Lua需要统一的UTF-8编码，有时候Lua脚本无故编译出错请检查编码问题！</li>
<li>若运行到真机，记得一定要设置Const.DebugMode=false</li>
<li>【该点摘录自云风博客】<strong>更新时要保护后内存中的非代码数据。</strong>这个时候，<strong>对 local 变量的使用务必小心</strong>。因为 local 变量总会被作为 upvalue 绑定在 closure 里。我们的代码经常会依赖这些 local 变量。在更新后，许多保存数据用的 local 变量会生成新的一份。这很可能丢失重要数据。而因为这个问题回避使用 local 也是不合适的。要知道 local 和 global 变量的性能可不只差上一点半点。<br>我采用的方法是，<strong>把数据记录在专用的全局表下，并用 local 去引用它。初始化这些数据的时候，首先应该检查他们是否被初始化过了。这样来保证数据不被更新过程重置</strong></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;传说中的热更新在Unity中是怎样实现的:)&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　热更新技术在游戏行业可以说是大名鼎鼎了，虽然苹果前段时间禁止了JSPatch等热更新技术，但目前来看，苹果并没有禁止游戏引擎的热更新技术。某种程度上说明了热更新在游戏中的重要性。而ulua作为一款优秀的unity3d热更新插件，完美解决了Unity游戏热更新的问题。&lt;br&gt;
    
    </summary>
    
      <category term="Unity" scheme="http://lemonxq.cn/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://lemonxq.cn/tags/Unity/"/>
    
      <category term="Lua" scheme="http://lemonxq.cn/tags/Lua/"/>
    
      <category term="热更新" scheme="http://lemonxq.cn/tags/%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>Unity中脚本的生命周期详解</title>
    <link href="http://lemonxq.cn/2017/04/20/Unity%E4%B8%AD%E8%84%9A%E6%9C%AC%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/"/>
    <id>http://lemonxq.cn/2017/04/20/Unity中脚本的生命周期详解/</id>
    <published>2017-04-20T07:06:22.000Z</published>
    <updated>2018-09-25T02:04:21.718Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">关于脚本的生命周期你都知道多少？</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　在Unity项目中，经常会使用到Start、Update、Awake、OnEnable、LateUpdate、OnDisable、OnDestroy、OnGUI、FixedUpdate方法，然而，它们的生命周期你都清楚么？看上去好像无关紧要的东西往往会在不经意间给你挖了一个坑…曾经被坑过的我如是说：)<br><a id="more"></a></p>
<h2 id="Unity脚本的生命周期"><a href="#Unity脚本的生命周期" class="headerlink" title="Unity脚本的生命周期"></a>Unity脚本的生命周期</h2><p>　　先上一张图:<br><img src="http://okwl1c157.bkt.clouddn.com/Image.png" alt=""><br>　　接下来将逐个讲解…</p>
<h3 id="Awake"><a href="#Awake" class="headerlink" title="Awake"></a>Awake</h3><p>　　Awake在MonoBehavior创建后就<strong>立刻</strong>调用，此后每当脚本被加载时调用一次Awake,即使脚本没有被激活；在<strong>脚本实例的整个生命周期</strong>中，Awake函数<strong>仅执行一次</strong>；<strong>值得注意的一点是，Awake函数的执行与否与脚本实例的状态（启用或禁用）并没有关系，而是与脚本实例所绑定的游戏对象的开关状态有关。</strong>如果游戏对象（即gameObject）的初始状态为关闭状态，那么运行程序，Awake函数不会执行；如果游戏对象的初始状态为开启状态，那么Awake函数会执行；如果重新加载场景，那么场景内Awake函数的执行情况重新遵循上述两点。</p>
<h3 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h3><p>　　Start()将在MonoBehavior创建后<strong>在该帧Update()第一次执行前</strong>被调用；只会在第一次调用Update之前调用一次；Start()函数<strong>只在脚本实例被启用时</strong>才会执行；Start函数<strong>总是在Awake函数之后执行。</strong>如果游戏对象开启了，对象上绑定的脚本实例被禁用了，那么Start函数不会执行。这是Start函数的特点，只有在脚本实例被启用且是<strong>首次启用时</strong>它才会执行。<strong>如果是已经开启过的脚本实例被关闭后再次开启，那么Start函数不会再次执行。</strong></p>
<p>　　<strong>注：一般开发中都是在Awake函数中获取游戏对象或者脚本实例的信息，然后在Start函数中进行一些获取之后的初始化设置。</strong></p>
<h3 id="Update-amp-amp-LateUpdate-amp-amp-FixedUpdate"><a href="#Update-amp-amp-LateUpdate-amp-amp-FixedUpdate" class="headerlink" title="Update &amp;&amp; LateUpdate &amp;&amp; FixedUpdate"></a>Update &amp;&amp; LateUpdate &amp;&amp; FixedUpdate</h3><p>　　当MonoBehaviour启用时,其Update 和 LateUpdate在每一帧被调用；Update每帧调用一次（每秒60帧不会卡），一般用于处理画面逻辑;</p>
<p>　　LateUpate一般用于刷新其他逻辑，注意LateUpdate是晚于所有Update执行的。一般类似相机跟随的代码会放到lateupdate里面去执行。举个栗子，一个宿舍4个人，每个人的起床在update中执行，出发在某个人中的lateupdate执行，这样就可以保证每个人都起床了才会出发</p>
<p>　　而FixedUpdate会<strong>在每个固定的物理时间片</strong>被调用一次.不会受到图像刷新帧速率的影响。这是放置游戏基本物理行为代码的地方。在Update之后调用。</p>
<h3 id="OnEnable-amp-amp-OnDisable-amp-amp-OnDestory"><a href="#OnEnable-amp-amp-OnDisable-amp-amp-OnDestory" class="headerlink" title="OnEnable &amp;&amp; OnDisable &amp;&amp; OnDestory"></a>OnEnable &amp;&amp; OnDisable &amp;&amp; OnDestory</h3><p>　　OnEnable:在每次激活脚本时调用OnEnable;<br>　　OnDisable:取消激活状态后调用<br>　　OnDestroy：被销毁时调用一次</p>
<p>　<strong>　注：Awake、OnEnable、Start,都是游戏开始运行前就调用的方法。</strong></p>
<p>　　GameObject的Activity为true，脚本的enable为true时，其先后顺序为：Awake、OnEnable、Start；<br>　　GameObject的Activity为true，脚本的enable为false时,只运行Awake；<br>　　GameObject的Activity为false时，以上都不调用，OnDisable()被调用；</p>
<h3 id="OnGUI"><a href="#OnGUI" class="headerlink" title="OnGUI"></a>OnGUI</h3><p>　　这个函数会每帧调用好几次（每个事件一次），GUI显示函数只能在OnGui中调用</p>
<h3 id="Reset"><a href="#Reset" class="headerlink" title="Reset"></a>Reset</h3><p>　　Reset是在用户点击检视面板的Reset按钮或者首次添加该组件时被调用.此函数只在编辑模式下被调用.Reset最常用于在检视面板中给定一个最常用的默认值.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;关于脚本的生命周期你都知道多少？&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　在Unity项目中，经常会使用到Start、Update、Awake、OnEnable、LateUpdate、OnDisable、OnDestroy、OnGUI、FixedUpdate方法，然而，它们的生命周期你都清楚么？看上去好像无关紧要的东西往往会在不经意间给你挖了一个坑…曾经被坑过的我如是说：)&lt;br&gt;
    
    </summary>
    
      <category term="Unity" scheme="http://lemonxq.cn/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://lemonxq.cn/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Hexo静态博客搭建+个人定制</title>
    <link href="http://lemonxq.cn/2017/03/24/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA+%E4%B8%AA%E4%BA%BA%E5%AE%9A%E5%88%B6/"/>
    <id>http://lemonxq.cn/2017/03/24/Hexo静态博客搭建+个人定制/</id>
    <published>2017-03-24T15:34:45.000Z</published>
    <updated>2018-09-25T02:04:21.718Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">打造高逼格的个人博客</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　很早以前就想写这样一篇了，因为各种原因耽搁到现在（逃）…网上关于Hexo的教程其实已经有挺多了，但是很多都是一笔带过。这篇博客除了<strong>Hexo</strong>博客的搭建过程，还有一些我加进去的<strong>个人定制</strong>模块，以及<strong>博客如何被搜索引擎（百度、谷歌）收录、如何进行SEO优化</strong>等等，以及在这过程中遇到的数不胜数的坑。虽然时隔一个月，有些搭建过程遇到的问题记不太清了orz…但是有什么问题还是可以问我的，我尽量解答=3=最后！！！【<strong>超长文预警</strong>】！！！建议可以先看目录选择感兴趣的部分orz<br><a id="more"></a></p>
<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>　　相信点进来看的都是对 Hexo 已经有了一定了解的吧~简而言之，Hexo 是一个基于 Node.js 的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。其作者是来自台湾的<a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">tommy351</a>大神。Hexo 因其界面简洁、美观且对各类人群（不只是程序猿）友好而广受欢迎，声望不亚于大名鼎鼎的WordPress。这也是我放弃 WordPress 改投 Hexo 的原因=。=放一张 Hexo NexT 主题的照片（是不是很好看hhh）<br><img src="http://okwl1c157.bkt.clouddn.com/next.png" alt=""></p>
<h2 id="基础配置篇"><a href="#基础配置篇" class="headerlink" title="基础配置篇"></a>基础配置篇</h2><p>【注：本文中使用的 Hexo 版本为<strong>3.22</strong>，部分配置与<strong>2.x</strong>可能有所出入】</p>
<h3 id="1-安装-amp-搭建"><a href="#1-安装-amp-搭建" class="headerlink" title="1.安装 &amp; 搭建"></a>1.安装 &amp; 搭建</h3><ul>
<li>安装<a href="http://git-scm.com" target="_blank" rel="noopener">Git</a>：安装后，注册 Github 账号，配置 SSH（具体见下一步）,打开 Git Bash,<strong>接下来的命令均在Git Bash中执行</strong></li>
<li>安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li>
<li>安装 Hexo : <code>$npm install -g hexo</code></li>
<li>安装依赖包： <code>$npm install</code></li>
<li>新建博客文件夹：cd到该文件夹，执行<code>$hexo init</code></li>
<li>新建Github仓库：仓库名<strong>必须</strong>为<code>你的Github名.github.io</code>，要不然就不能使用Github Pages服务了。。。</li>
</ul>
<h3 id="2-配置-SSH"><a href="#2-配置-SSH" class="headerlink" title="2.配置 SSH"></a>2.配置 SSH</h3><p>　　关于什么是 SSH，请自行百度（我懒..）这里直接讲一下配置步骤。  </p>
<ul>
<li>本地生成公钥私钥<br>　<code>$ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</code></li>
<li>添加公钥到 Github<ul>
<li>根据上一步的提示，找到公钥文件（默认为id_rsa.pub），用记事本打开，全选并复制。</li>
<li>登录 Github，右上角 头像 -&gt; Settings —&gt; SSH keys —&gt; Add SSH key。把公钥粘贴到key中，填好title并点击 Add key。</li>
<li>git bash中输入命令<code>$ssh -T git@github.com</code>，选yes，等待片刻可看到成功提示。</li>
</ul>
</li>
</ul>
<h3 id="3-NexT主题下载"><a href="#3-NexT主题下载" class="headerlink" title="3. NexT主题下载"></a>3. NexT主题下载</h3><p>　　 NexT 主题是由 <a href="https://github.com/iissnan" target="_blank" rel="noopener">iissnan</a> 大神所制作的一款简洁美观不失逼格的主题。下载方法有以下两种：  </p>
<ul>
<li>进入<code>博客根目录/themes/</code>, 执行<code>$git clone https://github.com/iissnan/hexo-theme-next.git</code></li>
<li>直接进入上面的链接，在项目主页download zip文件，然后解压到<code>博客根目录/themes/</code> 文件夹</li>
</ul>
<h3 id="4-发布"><a href="#4-发布" class="headerlink" title="4. 发布"></a>4. 发布</h3><p>　　使用以下两条命令进行发布，发布成功后可在浏览器中使用<code>你的github名.github.io</code>进入你的博客~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo clean</span><br><span class="line">$hexo d -g</span><br></pre></td></tr></table></figure></p>
<h2 id="Hexo日常使用篇"><a href="#Hexo日常使用篇" class="headerlink" title="Hexo日常使用篇"></a>Hexo日常使用篇</h2><h3 id="1-生成静态页面："><a href="#1-生成静态页面：" class="headerlink" title="1.生成静态页面："></a>1.生成静态页面：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo generate</span><br></pre></td></tr></table></figure>
<h3 id="2-本地预览："><a href="#2-本地预览：" class="headerlink" title="2.本地预览："></a>2.本地预览：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo server//或 hexo s</span><br><span class="line">//然后打开浏览器输入localhost:4000可以预览博客效果，用于调试</span><br></pre></td></tr></table></figure>
<h3 id="3-新建文章"><a href="#3-新建文章" class="headerlink" title="3. 新建文章"></a>3. 新建文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo new post &quot;title&quot;</span><br><span class="line">//新文章位置：/source/_posts</span><br></pre></td></tr></table></figure>
<h3 id="4-新建页面"><a href="#4-新建页面" class="headerlink" title="4. 新建页面"></a>4. 新建页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo new page &quot;title&quot;</span><br></pre></td></tr></table></figure>
<h3 id="5-部署并生成"><a href="#5-部署并生成" class="headerlink" title="5. 部署并生成"></a>5. 部署并生成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo d -g</span><br></pre></td></tr></table></figure>
<h3 id="6-清除生成的文件和缓存"><a href="#6-清除生成的文件和缓存" class="headerlink" title="6. 清除生成的文件和缓存"></a>6. 清除生成的文件和缓存</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo clean</span><br></pre></td></tr></table></figure>
<h2 id="config文件配置篇"><a href="#config文件配置篇" class="headerlink" title="_config文件配置篇"></a>_config文件配置篇</h2><h3 id="1-整站配置"><a href="#1-整站配置" class="headerlink" title="1.整站配置"></a>1.整站配置</h3><p>直接贴一下我的配置文件吧【路径：<strong>博客根目录/_config.yml</strong>】  </p>
<p>【<strong>友情提示：</strong>不要用系统自带记事本打开，容易出现编码不一致问题，最好用 <strong>Notepad++</strong> 或 <strong>Sublime Text</strong> 之类的】   </p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> Lemon-XQ <span class="comment"># 博客名</span></span><br><span class="line"><span class="attr">subtitle:</span> Stay Hungry, Stay Foolish <span class="comment"># 副标题</span></span><br><span class="line"><span class="attr">description:</span> 银河街角，时光路口 <span class="comment"># 站点描述</span></span><br><span class="line"><span class="attr">author:</span> Lemon-XQ <span class="comment"># 作者名</span></span><br><span class="line"><span class="attr">language:</span> zh-Hans <span class="comment"># 语言设置</span></span><br><span class="line"><span class="attr">timezone:</span> Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> http://lemonxq.cn <span class="comment"># 博客所要绑定的域名，没有则不填</span></span><br><span class="line"><span class="attr">root:</span> /</span><br><span class="line"><span class="attr">permalink:</span> :year/:month/:day/:title/</span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> source</span><br><span class="line"><span class="attr">public_dir:</span> public</span><br><span class="line"><span class="attr">tag_dir:</span> tags</span><br><span class="line"><span class="attr">archive_dir:</span> archives</span><br><span class="line"><span class="attr">category_dir:</span> categories</span><br><span class="line"><span class="attr">code_dir:</span> downloads/code</span><br><span class="line"><span class="attr">i18n_dir:</span> :lang</span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> :title.md <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> post</span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span> <span class="comment"># Hexo自带代码高亮插件</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> uncategorized</span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> YYYY-MM-DD</span><br><span class="line"><span class="attr">time_format:</span> HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment"># 每页显示文章数</span></span><br><span class="line"><span class="attr">pagination_dir:</span> page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions # 以下为第三方插件设置</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> next <span class="comment"># 使用的主题，主题配置后面讲</span></span><br><span class="line"></span><br><span class="line"><span class="attr">search:</span> <span class="comment"># 本地搜索插件</span></span><br><span class="line"><span class="attr">  path:</span> search.xml</span><br><span class="line"><span class="attr">  field:</span> post</span><br><span class="line"><span class="attr">  format:</span> html</span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">feed:</span> <span class="comment"># RSS订阅插件</span></span><br><span class="line"><span class="attr">  type:</span> atom</span><br><span class="line"><span class="attr">  path:</span> atom.xml</span><br><span class="line"><span class="attr">  limit:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line"><span class="attr">baidusitemap:</span> <span class="comment"># 百度站点地图</span></span><br><span class="line"><span class="attr">  path:</span> baidusitemap.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment # 非常重要的部署设置</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> git</span><br><span class="line"><span class="attr">  repository:</span> <span class="comment"># 可选择同时部署到 GitHub 和 coding 或者只部署到 Github</span></span><br><span class="line"><span class="attr">    github:</span> git@github.com:你的GitHub名/你的GitHub名.github.io.git</span><br><span class="line"><span class="attr">    coding:</span> git@git.coding.net:你的Coding名/你的Coding名.git</span><br><span class="line"><span class="attr">  branch:</span> master </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="2-Next主题配置"><a href="#2-Next主题配置" class="headerlink" title="2.Next主题配置"></a>2.Next主题配置</h3><p>一样贴一下我的主题config文件吧，注意和上面的全局config文件区分。<br>【路径：博客根目录/themes/next/_config.yml】</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></span><br><span class="line"><span class="attr">favicon:</span> /favicon.ico <span class="comment"># 网站logo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set default keywords (Use a comma to separate)</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">"Lemon,xq,unity,Hexo"</span> <span class="comment"># 网站关键词，有利于SEO优化</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line"><span class="attr">rss:</span> /atom.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify the date when the site was setup</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2017</span> <span class="comment"># 建站年份</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># icon between year and author @Footer</span></span><br><span class="line"><span class="attr">authoricon:</span> heart</span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer `powered-by` and `theme-info` copyright</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span></span><br><span class="line"><span class="comment"># See: https://support.google.com/webmasters/answer/139066</span></span><br><span class="line"><span class="comment"># Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span></span><br><span class="line"><span class="attr">canonical:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.</span></span><br><span class="line"><span class="attr">seo:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></span><br><span class="line"><span class="attr">menu:</span> <span class="comment"># 菜单栏设置</span></span><br><span class="line"><span class="attr">  home:</span> /</span><br><span class="line"><span class="attr">  categories:</span> /categories</span><br><span class="line"><span class="attr">  about:</span> /about</span><br><span class="line"><span class="attr">  archives:</span> /archives</span><br><span class="line"><span class="attr">  tags:</span> /tags</span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml</span></span><br><span class="line">  <span class="comment">#commonweal: /404.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="comment"># Icon Mapping:</span></span><br><span class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="comment">#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.</span></span><br><span class="line"><span class="comment">#   When an question mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line"><span class="attr">menu_icons:</span> <span class="comment"># 菜单项图标</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line"><span class="attr">  home:</span> home</span><br><span class="line"><span class="attr">  about:</span> user</span><br><span class="line"><span class="attr">  categories:</span> th</span><br><span class="line"><span class="attr">  schedule:</span> calendar</span><br><span class="line"><span class="attr">  tags:</span> tags</span><br><span class="line"><span class="attr">  archives:</span> archive</span><br><span class="line"><span class="attr">  sitemap:</span> sitemap</span><br><span class="line"><span class="attr">  commonweal:</span> heartbeat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes # NexT 主题提供三种布局</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="attr">scheme:</span> Pisces</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Font Settings</span></span><br><span class="line"><span class="comment"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span></span><br><span class="line"><span class="comment"># - All fonts set here will have the following styles:</span></span><br><span class="line"><span class="comment">#     light, light italic, normal, normal intalic, bold, bold italic</span></span><br><span class="line"><span class="comment"># - Be aware that setting too much fonts will cause site running slowly</span></span><br><span class="line"><span class="comment"># - Introduce in 5.0.1</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host. E.g. //fonts.googleapis.com (Default)</span></span><br><span class="line"><span class="attr">  host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used on &lt;body&gt; element.</span></span><br><span class="line"><span class="attr">  global:</span></span><br><span class="line">    <span class="comment"># external: true will load this font family from host.</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    family:</span> Lato</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for Headlines (h1, h2, h3, h4, h5, h6)</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line"><span class="attr">  headings:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line"><span class="attr">  posts:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for Logo</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line">  <span class="comment"># The `size` option use `px` as unit</span></span><br><span class="line"><span class="attr">  logo:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    family:</span></span><br><span class="line"><span class="attr">    size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line"><span class="attr">  codes:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    family:</span></span><br><span class="line"><span class="attr">    size:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#friend links</span></span><br><span class="line"><span class="attr">links_title:</span> 友情链接</span><br><span class="line"></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="comment"># 添加你的友情链接（eg. 慕课网: imooc.com）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></span><br><span class="line"><span class="attr">social:</span> <span class="comment"># 添加你的社交账号</span></span><br><span class="line"><span class="attr">  GitHub:</span> https://github.com/Lemon-XQ</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links Icons</span></span><br><span class="line"><span class="comment"># Icon Mapping:</span></span><br><span class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="comment">#   Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.</span></span><br><span class="line"><span class="comment">#   When an globe mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line"><span class="attr">social_icons:</span> </span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Icon Mappings.</span></span><br><span class="line">  <span class="comment"># KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line"><span class="attr">  GitHub:</span> github</span><br><span class="line"><span class="attr">  Twitter:</span> twitter</span><br><span class="line"><span class="attr">  Weibo:</span> weibo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.jpg</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.jpg</span></span><br><span class="line"><span class="attr">avatar:</span> /images/avatar.jpg <span class="comment"># 自定义头像</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否为侧边栏文章的目录自动添加索引</span></span><br><span class="line"><span class="comment"># Table Of Contents in the Sidebar</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line"><span class="attr">  number:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># http://creativecommons.org/</span></span><br><span class="line"><span class="comment"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment">#creative_commons: by-nc-sa</span></span><br><span class="line"><span class="comment">#creative_commons:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">sidebar:</span> <span class="comment"># 这个改了好像没什么用。。。</span></span><br><span class="line">  <span class="comment"># Sidebar Position, available value: left | right</span></span><br><span class="line"><span class="attr">  position:</span> left</span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display, available value:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggler.</span></span><br><span class="line"><span class="attr">  display:</span> post</span><br><span class="line">  <span class="comment">#display: always</span></span><br><span class="line">  <span class="comment">#display: hide</span></span><br><span class="line">  <span class="comment">#display: remove</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Blogrolls </span></span><br><span class="line"><span class="comment">#links_title: Links</span></span><br><span class="line"><span class="comment">#links_layout: block</span></span><br><span class="line"><span class="comment">#links_layout: inline</span></span><br><span class="line"><span class="comment">#links:</span></span><br><span class="line">  <span class="comment">#Title: http://example.com/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></span><br><span class="line"><span class="comment"># 开启后使用 &lt;!-more--&gt; 可以实现点击查看全文效果</span></span><br><span class="line"><span class="attr">scroll_to_more:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically Excerpt. Not recommand.</span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  updated_at:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开启微信赞赏</span></span><br><span class="line"><span class="comment"># Wechat Subscriber</span></span><br><span class="line"><span class="attr">wechat_subscriber:</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  qcode:</span> http://okwl1c157.bkt.clouddn.com/wechat-qcode.jpg</span><br><span class="line"><span class="attr">  description:</span> 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Misc Theme Settings # Misc布局设置</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom Logo.</span></span><br><span class="line"><span class="comment"># !!Only available for Default Scheme currently.</span></span><br><span class="line"><span class="comment"># Options:</span></span><br><span class="line"><span class="comment">#   enabled: [true/false] - Replace with specific image</span></span><br><span class="line"><span class="comment">#   image: url-of-image   - Images's url</span></span><br><span class="line"><span class="attr">custom_logo:</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  image:</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="comment"># 设置代码高亮主题</span></span><br><span class="line"><span class="attr">highlight_theme:</span> night bright</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Third Party Services Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  cdn:</span> //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自从Swiftype要收费后。。。你懂的</span></span><br><span class="line"><span class="comment"># Swiftype Search API Key</span></span><br><span class="line"><span class="comment">#swiftype_key:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Analytics ID</span></span><br><span class="line"><span class="comment">#baidu_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多说 你的昵称</span></span><br><span class="line"><span class="comment"># Duoshuo ShortName</span></span><br><span class="line"><span class="attr">duoshuo_shortname:</span> lemonxq</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="comment">#disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Hypercomments</span></span><br><span class="line"><span class="comment">#hypercomments_id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Gentie productKey</span></span><br><span class="line"><span class="comment">#gentie_productKey:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Support for youyan comments system.</span></span><br><span class="line"><span class="comment"># You can get your uid from http://www.uyan.cc</span></span><br><span class="line"><span class="comment">#youyan_uid: your uid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Share</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    button | slide</span></span><br><span class="line"><span class="comment"># Warning: Baidu Share does not support https.</span></span><br><span class="line"><span class="comment">#baidushare:</span></span><br><span class="line"><span class="comment">##  type: button</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Share</span></span><br><span class="line"><span class="comment">#jiathis:</span></span><br><span class="line"><span class="comment"># Warning: JiaThis does not support https.</span></span><br><span class="line"><span class="comment">#add_this_id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Share</span></span><br><span class="line"><span class="attr">duoshuo_share:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters/</span></span><br><span class="line"><span class="comment">#google_site_verification:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="comment">#google_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CNZZ count</span></span><br><span class="line"><span class="attr">cnzz_siteid:</span> <span class="comment"># CNZZ站长统计功能，开启服务后将siteid添加在此处</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Application Insights</span></span><br><span class="line"><span class="comment"># See https://azure.microsoft.com/en-us/services/application-insights/</span></span><br><span class="line"><span class="comment"># application_insights:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make duoshuo show UA</span></span><br><span class="line"><span class="comment"># user_id must NOT be null when admin_enable is true!</span></span><br><span class="line"><span class="comment"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></span><br><span class="line"><span class="comment"># 多说评论功能</span></span><br><span class="line"><span class="attr">duoshuo_info:</span></span><br><span class="line"><span class="attr">  ua_enable:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">  admin_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  user_id:</span> <span class="comment"># 管理员ID</span></span><br><span class="line"><span class="attr">  admin_nickname:</span> 博主</span><br><span class="line"></span><br><span class="line"><span class="attr">duoshuo_hotartical:</span> <span class="literal">true</span> <span class="comment"># 多说 热评文章</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Facebook SDK Support.</span></span><br><span class="line"><span class="comment"># https://github.com/iissnan/hexo-theme-next/pull/410</span></span><br><span class="line"><span class="attr">facebook_sdk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  app_id:</span>       <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line"><span class="attr">  fb_admin:</span>     <span class="comment">#&lt;user_id&gt;</span></span><br><span class="line"><span class="attr">  like_button:</span>  <span class="comment">#true</span></span><br><span class="line"><span class="attr">  webmaster:</span>    <span class="comment">#true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Facebook comments plugin</span></span><br><span class="line"><span class="comment"># This plugin depends on Facebook SDK.</span></span><br><span class="line"><span class="comment"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span></span><br><span class="line"><span class="attr">facebook_comments_plugin:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  num_of_posts:</span> <span class="number">10</span>  <span class="comment"># min posts num is 1</span></span><br><span class="line"><span class="attr">  width:</span> <span class="number">100</span>%       <span class="comment"># default width is 550px</span></span><br><span class="line"><span class="attr">  scheme:</span> light     <span class="comment"># default scheme is light (light or dark)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line"><span class="comment"># 启动页面浏览量功能</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  app_id:</span> <span class="comment"># leancloud 控制台后台获取</span></span><br><span class="line"><span class="attr">  app_key:</span> <span class="comment"># leancloud 控制台后台获取</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="comment"># 不蒜子统计功能</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line"><span class="attr">  site_uv:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  site_uv_header:</span> &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i<span class="string">&gt;</span></span><br><span class="line"><span class="string"></span><span class="attr">  site_uv_footer:</span></span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line"><span class="attr">  site_pv:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  site_pv_header:</span> &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i<span class="string">&gt;</span></span><br><span class="line"><span class="string"></span><span class="attr">  site_pv_footer:</span></span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line"><span class="attr">  page_pv:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  page_pv_header:</span> &lt;i class=<span class="string">"fa fa-file-o"</span>&gt;&lt;/i<span class="string">&gt;</span></span><br><span class="line"><span class="string"></span><span class="attr">  page_pv_footer:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tencent analytics ID</span></span><br><span class="line"><span class="comment"># tencent_analytics:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></span><br><span class="line"><span class="comment"># 百度推送</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Calendar</span></span><br><span class="line"><span class="comment"># Share your recent schedule to others via calendar page</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># API Documentation:</span></span><br><span class="line"><span class="comment"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span></span><br><span class="line"><span class="attr">calendar:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  calendar_id:</span> &lt;required<span class="string">&gt;</span></span><br><span class="line"><span class="string"></span><span class="attr">  api_key:</span> &lt;required<span class="string">&gt;</span></span><br><span class="line"><span class="string"></span><span class="attr">  orderBy:</span> startTime</span><br><span class="line"><span class="attr">  offsetMax:</span> <span class="number">24</span></span><br><span class="line"><span class="attr">  offsetMin:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">  timeZone:</span></span><br><span class="line"><span class="attr">  showDeleted:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  singleEvents:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  maxResults:</span> <span class="number">250</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Algolia Search</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  hits:</span></span><br><span class="line"><span class="attr">    per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    input_placeholder:</span> Search for Posts</span><br><span class="line"><span class="attr">    hits_empty:</span> <span class="string">"We didn't find any results for the search: $&#123;query&#125;"</span></span><br><span class="line"><span class="attr">    hits_stats:</span> <span class="string">"$&#123;hits&#125; results found in $&#123;time&#125; ms"</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="个人定制模块"><a href="#个人定制模块" class="headerlink" title="个人定制模块"></a>个人定制模块</h2><h3 id="更改代码块颜色及字体大小"><a href="#更改代码块颜色及字体大小" class="headerlink" title="更改代码块颜色及字体大小"></a>更改代码块颜色及字体大小</h3><ol>
<li>打开<code>\themes\next\source\css\ _variables\base.styl</code>文件</li>
<li>修改<code>$code-background</code>和<code>$code-foreground</code>的值：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Code &amp; Code Blocks</span><br><span class="line">// 用``围出的代码块</span><br><span class="line">// --------------------------------------------------</span><br><span class="line">$code-font-family               = $font-family-monospace</span><br><span class="line">$code-font-size                 = <span class="number">15</span>px <span class="comment"># 代码字体大小</span></span><br><span class="line">$code-background                = <span class="comment">#自定义RGB值</span></span><br><span class="line">$code-foreground                = <span class="comment">#自定义RGB值</span></span><br><span class="line">$code-border-radius             = <span class="number">4</span>px</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="实现底栏半透明"><a href="#实现底栏半透明" class="headerlink" title="实现底栏半透明"></a>实现底栏半透明</h3><ol>
<li>打开<br><code>博客根目录/themes/next/source/css/_common/components/footer/footer,styl</code>文件</li>
<li>在最开始的.footer中修改color值为#999<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.footer &#123;</span><br><span class="line"><span class="attr">  font-size:</span> <span class="number">14</span>px;</span><br><span class="line"><span class="attr">  color:</span> <span class="comment">#999;</span></span><br><span class="line">  img &#123; border: none; &#125;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">	font-size: <span class="number">13</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h3><ol>
<li>将背景图片命名为<strong>background.jpg</strong>并放入<code>博客根目录/source/images</code>文件夹中</li>
<li>打开<code>博客根目录/themes/next/source/css/_custom/custom.styl</code>文件</li>
<li>加入如下代码：</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">body &#123; </span><br><span class="line">	background-image: url(/images/background.jpg);</span><br><span class="line">	background-attachment: fixed;</span><br><span class="line">	background-repeat: <span class="literal">no</span>-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>　　一个高逼格的博客怎么能够少了域名呢=。=域名提供商有很多，像godaddy、万网等。如果是学生党的话推荐使用<strong>腾讯云</strong>“<a href="https://www.qcloud.com/act/campus" target="_blank" rel="noopener">1元云主机+域名</a>”计划。</p>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>这里以在腾讯云购买的域名为例。</p>
<ol>
<li>进入腾讯云后台域名管理，点击解析域名</li>
<li>添加DNS记录：<br><img src="http://okwl1c157.bkt.clouddn.com/dns2.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/dns1.png" alt=""><br>【注：腾讯云中DNS记录生效需要十分钟，请耐心等待】</li>
<li>在博客根目录里的source目录中新建CNAME文本文件（不带任何后缀！！！），然后用Notepad++编辑CNAME文件，写入你的域名，保存退出</li>
<li>重新部署一下博客（hexo clean、hexo d -g）</li>
<li>试试能不能通过域名访问到你的博客</li>
</ol>
<h2 id="百度-amp-谷歌收录"><a href="#百度-amp-谷歌收录" class="headerlink" title="百度 &amp; 谷歌收录"></a>百度 &amp; 谷歌收录</h2><p>检测站点是否已被百度 or 谷歌收录的方法： 在百度 or 谷歌搜索框中输入<code>site:你的站点</code>然后回车，如果有结果显示，说明已被收录。</p>
<h3 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h3><p>　　让百度收录我的博客真的是经历了很长的一段过程。。。关于提交sitemap、设置推送链接可以看一下<a href="http://www.jianshu.com/p/8c0707ce5da4" target="_blank" rel="noopener">这篇文章</a>。事实上按照该博客的做法后，我等了一个星期都没有收录成功（明明谷歌的都收录了orz）。后来，我发现了原因。那就是github禁止了百度爬虫，而我的站点又是托管在github上的，所以百度爬取不到我的网页，自然收录不了，以下是解决方案。</p>
<ol>
<li>将博客同时部署在github和<strong>coding</strong>上，coding的服务器在国内，访问速度快，而且最重要的是不禁百度爬虫</li>
<li>打开根目录下_config.yml文件，修改最下面的deploy部分如下</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:你的GitHub名/你的GitHub名.github.io.git</span><br><span class="line">    coding: git@git.coding.net:你的Coding名/你的Coding名.git</span><br><span class="line">  branch: master </span><br></pre></td></tr></table></figure>
<ol start="3">
<li>coding上创建一个新项目，建议<strong>命名为你的Github名</strong></li>
<li>本地打开 id_rsa.pub 文件，复制其中全部内容，填写到SSH_RSA公钥key下的一栏，公钥名称可以随意起名字。完成后点击“添加”，然后输入密码或动态码即可添加完成。添加后，在git bash命令输入：<code>ssh -T git@git.coding.net</code>检测公钥是否添加成功</li>
<li>在coding项目主页中点击<strong>pages服务</strong>，进行如下配置<br><img src="http://okwl1c157.bkt.clouddn.com/pages.png" alt=""></li>
<li>在DNS Pod中添加两条CNAME记录，如下<br><img src="http://okwl1c157.bkt.clouddn.com/dns3.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/dns4.png" alt=""></li>
<li>重新部署博客，等待一两天后应该就可以在百度里搜索到你的博客啦（虽然目前为止，百度好像也就收录了我的站点首页= =）</li>
<li>小tips：百度<strong>主动推送</strong>比自动推送等要快的多，因此每写完一篇博客后，建议自己主动推送给百度，方法百度站长平台里有写</li>
<li>小tips之二：在百度站长平台<strong>索引量</strong>工具定制索引规则为：<code>你的站点/*</code>　可以加快百度爬虫爬取你的博客网站下的子网页并建立索引的速度。<h3 id="谷歌收录"><a href="#谷歌收录" class="headerlink" title="谷歌收录"></a>谷歌收录</h3>让谷歌收录就容易多了，只要提交站点地图然后验证域名所有权就行了，具体的上面那篇文章也很详细地介绍了，这里不再赘述。</li>
</ol>
<h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><h3 id="更改首页标题格式"><a href="#更改首页标题格式" class="headerlink" title="更改首页标题格式"></a>更改首页标题格式</h3><p>打开\themes\next\layout\index.swig文件，找到这行代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>
<p>把它改成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;</span><br><span class="line">  &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="外链生成"><a href="#外链生成" class="headerlink" title="外链生成"></a>外链生成</h3><p>　　这里推荐使用外链工具为你的站点批量生成外链。百度一下“超级外链SEO工具”，输入站点名，然后就让它自动为你生成外链吧~~新站的话建议每天刷两次。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><p><a href="https://lovenight.github.io/2015/11/10/Hexo-3-1-1-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/" target="_blank" rel="noopener">Hexo3.1.1静态博客搭建指南</a></p>
</li>
<li><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT使用文档</a></p>
</li>
<li><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档（中文版）</a></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;打造高逼格的个人博客&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　很早以前就想写这样一篇了，因为各种原因耽搁到现在（逃）…网上关于Hexo的教程其实已经有挺多了，但是很多都是一笔带过。这篇博客除了&lt;strong&gt;Hexo&lt;/strong&gt;博客的搭建过程，还有一些我加进去的&lt;strong&gt;个人定制&lt;/strong&gt;模块，以及&lt;strong&gt;博客如何被搜索引擎（百度、谷歌）收录、如何进行SEO优化&lt;/strong&gt;等等，以及在这过程中遇到的数不胜数的坑。虽然时隔一个月，有些搭建过程遇到的问题记不太清了orz…但是有什么问题还是可以问我的，我尽量解答=3=最后！！！【&lt;strong&gt;超长文预警&lt;/strong&gt;】！！！建议可以先看目录选择感兴趣的部分orz&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="博客" scheme="http://lemonxq.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="SEO" scheme="http://lemonxq.cn/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>Cent OS下网络配置的详细步骤及一些坑</title>
    <link href="http://lemonxq.cn/2017/03/04/Cent-OS%E4%B8%8B%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E7%9A%84%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4%E5%8F%8A%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
    <id>http://lemonxq.cn/2017/03/04/Cent-OS下网络配置的详细步骤及一些坑/</id>
    <published>2017-03-04T12:16:03.000Z</published>
    <updated>2018-09-25T02:04:21.716Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　本步骤基于<strong>cent os 6.5</strong>，使用的虚拟机是<strong>Virtual Box</strong>。最终可实现主机与虚拟机互ping通，虚拟机与外网互ping通。当然，如果是cent os 7.0以上或者虚拟机是VM ware的，可能会有些差异。<br><a id="more"></a></p>
<h2 id="虚拟机网络配置"><a href="#虚拟机网络配置" class="headerlink" title="虚拟机网络配置"></a>虚拟机网络配置</h2><ol>
<li><p>打开主机“网络连接”，可以看到有一块虚拟网卡（VirtualBox Host-Only Network）,双击查看<strong>详细信息</strong><br><img src="http://okwl1c157.bkt.clouddn.com/virtualbox%20hostonly%20network.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/detail.png" alt=""><br><strong>PS: 虚拟网卡不一定只有一块，具体可在虚拟机全局设定中进行设置，这里我选择了第二块虚拟网卡作为cent os的物理网卡。</strong></p>
</li>
<li><p>记下详细信息中<strong>网卡的IP地址</strong>（<strong>192.168.137.1</strong>）</p>
</li>
<li><p>在<strong>“网络连接”</strong>中右键选择你当前上网所用的网卡（这里我用的是无线网卡），打开属性，在<strong>“共享”</strong>一栏选择刚才的那块虚拟网卡。<br><img src="http://okwl1c157.bkt.clouddn.com/share.png" alt=""><br><strong>PS：这一步非常重要！！！目的是建立虚拟网卡与主机物理网卡的联系，从而达到共享网络的效果（个人理解类似于桥接）</strong></p>
</li>
<li><p>打开VirtualBox的<strong>全局设定</strong>，进行如下设置：<br><img src="http://okwl1c157.bkt.clouddn.com/setting-1.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/setting-2.png" alt=""></p>
</li>
<li>打开cent os虚拟机的设置，进行如下配置：<br><img src="http://okwl1c157.bkt.clouddn.com/network.png" alt=""><br><strong>PS：这里我使用的是Host-Only，实际上使用桥接也可以，使用桥接的话直接桥接到主机物理网卡，无须设置共享</strong><h2 id="Cent-OS中网络配置"><a href="#Cent-OS中网络配置" class="headerlink" title="Cent OS中网络配置"></a>Cent OS中网络配置</h2></li>
<li>配置<strong>ip地址</strong><br>使用命令 <strong>vi /etc/sysconfig/network-scripts/ifcfg-eth0</strong> 修改文件内容如下：<br><img src="http://okwl1c157.bkt.clouddn.com/eth0setting.png" alt=""></li>
<li>配置<strong>网关</strong><br>使用命令 <strong>vi /etc/sysconfig/network</strong> 修改文件内容如下：<br><img src="http://okwl1c157.bkt.clouddn.com/gateway.png" alt=""></li>
<li>配置<strong>DNS服务</strong><br>使用命令 <strong>vi /etc/resolv.conf</strong> 修改文件内容如下：<br><img src="http://okwl1c157.bkt.clouddn.com/dns.png" alt=""></li>
<li>重启网络服务（<strong>service network restart</strong>）</li>
</ol>
<h2 id="一些注意事项"><a href="#一些注意事项" class="headerlink" title="一些注意事项"></a>一些注意事项</h2><ol>
<li>以上步骤理论上可实现虚拟机与主机、虚拟机与外网互ping通，如果只有虚拟机ping不通主机，那么应该是主机的<strong>防火墙</strong>没有关闭，主机ping不通虚拟机也可能是这个原因。</li>
<li>如果更换网络或者对该虚拟机进行了迁移导致执行ifconfig命令后<strong>找不到eth0网卡</strong>，则只需执行以下几步：<ul>
<li>执行 <strong>ifconfig -a</strong> 命令查看虚拟机网卡（一般是<strong>eth1</strong>）地址(即<strong>HWaddr</strong>)</li>
<li>执行 <strong>vi /etc/sysconfig/network-scripts/ifcfg-eth0</strong> 修改<strong>HWaddr</strong>值为虚拟机网卡地址</li>
<li>执行 <strong>rm －rf /etc/udev/rules.d/70-persistent-net.rules</strong> 删除70-persistent-net.rules文件</li>
<li>重启系统 <strong>reboot -h now</strong></li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　本步骤基于&lt;strong&gt;cent os 6.5&lt;/strong&gt;，使用的虚拟机是&lt;strong&gt;Virtual Box&lt;/strong&gt;。最终可实现主机与虚拟机互ping通，虚拟机与外网互ping通。当然，如果是cent os 7.0以上或者虚拟机是VM ware的，可能会有些差异。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://lemonxq.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://lemonxq.cn/tags/Linux/"/>
    
      <category term="Cent-OS" scheme="http://lemonxq.cn/tags/Cent-OS/"/>
    
      <category term="Virtual Box" scheme="http://lemonxq.cn/tags/Virtual-Box/"/>
    
      <category term="eth0" scheme="http://lemonxq.cn/tags/eth0/"/>
    
      <category term="网络" scheme="http://lemonxq.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hello~</title>
    <link href="http://lemonxq.cn/2017/02/04/Hello/"/>
    <id>http://lemonxq.cn/2017/02/04/Hello/</id>
    <published>2017-02-04T03:26:29.000Z</published>
    <updated>2018-09-25T02:04:21.716Z</updated>
    
    <content type="html"><![CDATA[<p>你好，欢迎来到我的个人技术博客:)<br><a id="more"></a><br>可以<a href="https://lemon-xq.github.io/about/" target="_blank" rel="noopener">戳这里</a>了解一下我~  </p>
<p>有任何技术上的问题，欢迎一起探讨=。=<br><img src="http://okwl1c157.bkt.clouddn.com/avatar.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好，欢迎来到我的个人技术博客:)&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://lemonxq.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
